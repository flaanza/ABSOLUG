;; ================================================================== BREEDS, ATTRIBUTES & GENERAL VARIABLES ======================================================================================
;;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
breed [smallholders a-smallholder]
breed [companies a-company]
breed [governments a-government]
breed [NGOs a-NGO]

globals [
  forest-extent                                 ;; To monitor amount of forest-patches in the World, used to calculate deforestation rate
  initial-land-costs-company                    ;; To record the initial land-costs for companies, used to set a baseline for the ccompany-lobby-government mechanism
  owner-ID                                      ;; Set to a turtle's 'who' and imprinted on a patch to record land-ownership
  money-patch-pioneer                           ;; Patches with highest conversion-profit, determines destination-patch for companies when converting land
  money-patch-mainstreamer
  money-patch-laggard
  money-patch-smallholder
  certification-patch-pioneer                   ;; Patches with highest certification-profit (using the certification-rent variable), determines destination-patch when certifying existing crop land
  certification-patch-mainstreamer
  certification-patch-laggard
  certification-patch-smallholder
  intensification-patch-pioneer                 ;; Patches with highest intensification-profit (using the intensification-rent variable), determines destination-patch when intensifying existing crop land
  intensification-patch-mainstreamer
  intensification-patch-laggard
  intensification-patch-smallholder
  pioneer-set-aside-patch                       ;; Patches with highest set-aside-profit (using the set-aside-rent variable), determines destination-patch when pioneers engage in set-aside conversion
  reputational-cost-P-tier-3                    ;; Intermediary variables, used for calculating land-rents accurately; this variable is 0 when deforestation is legal, reputational [...]
  reputational-cost-M-tier-3                    ;; [...] cost is only subtracted from land-rents when deforestation of tier-3 patches (i.e., forest) is illegal; deforestation of tier 2 & 1 [...]
  reputational-cost-L-tier-3                    ;; [...] patches always incurs reputational cost which is dependent on the company tier (and the respective reputational weight)
  reputational-cost-P-tier-2
  reputational-cost-M-tier-2
  reputational-cost-L-tier-2
  reputational-cost-P-tier-1
  reputational-cost-M-tier-1
  reputational-cost-L-tier-1
  forest-extent-tracker                         ;; Variable used to track forest extent over time and to calculate annual deforestation rates
  annual-deforestation                          ;; Variable displaying annual deforestation
  company_stagnation                            ;; Variable displaying the amount of times a company-agent chose to idle, reflecting business stagnation
  smallholder_stagnation                        ;; Variable displaying the amount of times a company-agent chose to idle, reflecting development stagnation
  current-landscape-homogeneity                 ;; Variable displaying the percentage of homogeneity as compared to the baseline homogeneity of 100%
  aichi-on-track?                               ;; Variable displaying whether the government is on track to meet the Aichi targets by the end of the policy period

;----------------------------list of variables to store statistics----------------------

  company-transactions                          ;; To capture all transactions that invovle companies
  smallholder-transactions                      ;; To capture all transactions that invovle smallholders
  NGO-transactions                              ;; To capture all transactions that invovle NGOs
  government-transactions                       ;; To capture all transactions that invovle the government
]

turtles-own [
  conventional-land-ownership                   ;; Tracks number of conventional crop patches converted by an agent, used for limiting amount of total landownership and calculating income & expenses
  certified-land-ownership                      ;; Tracks number of certified patches owned by an agent, used for calculating income & expenses
  intensified-land-ownership                    ;; Tracks number of intensified patches owned by an agent, used for calculating income & expenses
  wealth                                        ;; Tracks wealth of agents, determined by income, expenses, and fines
  ticks-until-action                            ;; Determines how many ticks need to pass before an agent's next action, resets after an agent carries out an action (ie, conversion, certification, intensification)
  start-timer                                   ;; Determines after how many ticks after the first tick in a simulation an agent can carry out their first action, is a random number in a given intervall
]

companies-own [
  company-tier                                  ;; To record to which category the agent belongs to (pioneer, mainstreamer, laggard)
]

governments-own [
  company-pressure-contingent                   ;; Intermediary variable that tracks the lobbying pressure applied to a government by companies
  NGO-pressure-contingent                       ;; Intermediary variable that tracks the campaigning pressure applied to a government by NGOs
  pressure-contingent                           ;; Intermediary variable that tracks the pressure / lobbying applied to a government by companies and NGOs
  government-ticks-until-action                 ;; Reset to 3 each time after the government carries out an action (e.g. adjusting taxes), serves to simulate an annual cadence of government actions, as opposed to acting every tick (ie, 3 months)
]

patches-own [
  owned-by                                      ;; Tracks which agent is the owner of this patch
  owner                                         ;; Intermediary step to imprint a turtle variable onto a patch, is set to a turtle's 'who'-value and then imprinted onto the 'owned-by variable'
  protection-status                             ;; For statistical and analysis purposes, tracks how many patches have a protection status, and what kind of protection status they have (e.g., riparian, PA, buffer, etc)
  land-cover                                    ;; Records a patch's land cover type (eg, forest, cropland, riparian, etc)'
  distance-to-center                            ;; Records a patch's distance to the center point of the World, is used for determining transportation cost (the further a patch is from the center line of the world, the higher the transportation cost)
  transportation-cost                           ;; Cost of transporting a commodity from the patch to the central marketplace, used in the NPV calculation of a patch's land rent
  conversion-time                               ;; Tracks time (ie tick) when a patch was converted, used by certification procedures
  certified?                                    ;; Records if a crop-patch is sustainability certified
  intensified?                                  ;; Records if a crop-patch is sustainability certified
  fallow-timer                                  ;; Used for simulating rotation of land-cover in smallholder-owned patches; is a timer that counts down - 1 per tick, indicating when a smallholder-owned patch moves from crop --> fallow --> forest
  land-rent-P                                   ;; Indicates the land-rent for conversion of a given area for a pioneer company
  land-rent-M                                   ;; Indicates the land-rent for conversion of a given area for a mainstreamer company
  land-rent-L                                   ;; Indicates the land-rent for conversion of a given area for a laggard company
  land-rent-SH                                  ;; Indicates the land-rent for conversion of a given patch for a smallholder
  certification-rent                            ;; Indicates the land-rent for companies certifying a given area of crop-land
  certification-rent-smallholder                ;; Indicates the land-rent for smallhodlers certifying a given crop-patch
  set-aside-rent                                ;; Indicates the land-rent for pioneer-companies setting aside & certifying a given area
  intensification-rent                          ;; Indicates the land-rent for companies intensifying a given area of crop-land
  intensification-rent-smallholder              ;; Indicates the land-rent for companies intensifying a given crop-patch
  abandonment-timer                             ;; Logs a tick-value (e.g. 20) when a crop-patch is designated as protected area and thus 'abandoned', the timer counts down by 1 each tick, when timer is 0, the patch land-cover changes to "forest"
  PA-appropriateness
]

;; ================================================================ WOLD & AGENT SETUP PROCEDURES ==========================================================================================================
to setup
  clear-all
  setup-patches
  setup-rivers
  setup-protected-areas
  setup-smallholders
  setup-pioneers
  setup-mainstreamers
  setup-laggards
  setup-governments
  setup-NGOs
  set forest-extent-tracker []
  set initial-land-costs-company land-costs-company
  reset-ticks
end

;; ================================================================SETTING UP THE WORLD========================================================================================================
to setup-patches
  ask patches [
    set pcolor green
    set protection-status "none"
    set land-cover "forest"
    set certified? "no"
    set intensified? "no"
    set owner "nobody"
    set distance-to-center distancexy 0 0
    set abandonment-timer -10
    set set-aside-rent -5
    set PA-appropriateness 0
    set land-rent-P 0
    set land-rent-M 0
    set land-rent-L 0
    set land-rent-SH 0
    set intensification-rent 0
    set intensification-rent-smallholder 0
    set certification-rent 0
    set certification-rent-smallholder 0


  ]


;; --- Second, setting the boundaries of the world to black and a non-usable land cover type (i.e., urban) ---
  ask patches with [pxcor = min-pxcor] [
    set pcolor black
    set owned-by "99"
    set land-cover "urban"
  ]

  ask patches with [pxcor = max-pxcor][
    set owned-by "99"
    set pcolor black
    set land-cover "urban"
  ]

  ask patches with [pycor = min-pycor] [
    set pcolor black
    set owned-by "99"
    set land-cover "urban"
  ]

  ask patches with [pycor = max-pycor][
    set pcolor black
    set owned-by "99"
    set land-cover "urban"
  ]

  ask patch (max-pxcor - 1) (max-pycor - 1) [                  ;; 'home' patch of government
    set pcolor black
    set owned-by "99"
    set land-cover "government"
  ]

  ask patch (min-pxcor + 1) (max-pycor - 1) [                  ;; 'home' patch of NGOs
    set pcolor black
    set owned-by "99"
    set land-cover "NGO"
  ]

;; --- Third, creating the central market space ---
;; --- The outer boundary of the urban area is different from the center to mark the patches where agents spawn when setting up the World ---

ask patches with [pxcor > -6 and                                 ;; central square
                  pxcor < 6  and
                  pycor > -6 and
                  pycor < 6]
  [
    set pcolor yellow - 1
    set owned-by "99"
    set land-cover "urban"
  ]

ask patches with [pxcor = 6 and                                  ;; vertical right side of the central square
                  pycor > -7 and
                  pycor < 7]
  [
    set pcolor black + 4
    set owned-by "99"
    set land-cover "urban"
  ]

ask patches with [pxcor = -6 and                                 ;; vertical left side of the central square
                  pycor > -7 and
                  pycor < 7]
  [
    set pcolor black + 4
    set owned-by "99"
    set land-cover "urban"
  ]

ask patches with [pycor = 6 and                                  ;; horizontal top side of the central square
                  pxcor > -7 and
                  pxcor < 7]
  [
    set pcolor black + 4
    set owned-by "99"
    set land-cover "urban"
  ]

ask patches with [pycor = -6 and                                  ;; horizontal bottom side of the central square
                  pxcor > -7 and
                  pxcor < 7]
  [
    set pcolor black + 4
    set owned-by "99"
    set land-cover "urban"
  ]

ask patch 0 0 [set plabel "M"
  set land-cover "urban"]

end

to setup-rivers
  if #-of-rivers = 0 []
  if #-of-rivers = 1 [
    ask patches at-points [[-52 0]	[-51 0]	[-51 1]	[-50 1]	[-50 2]	[-49 2]	[-49 3]	[-48 3]	[-48 4]	[-47 4]	[-47 5]	[-47 6]	[-47 7]	[-47 8]	[-47 9]	[-46 9]	[-45 9]	[-44 9]	[-44 10]	[-43 10]	[-42 10]	[-42 11]	[-41 11]	[-40 11]	[-39 11]	[-39 12]	[-38 12]	[-37 12]	[-36 12]	[-36 12]	[-36 13]	[-36 13]	[-36 14]	[-35 15]	[-35 16]	[-35 16]	[-35 17]	[-35 17]	[-34 18]	[-34 19]	[-34 20]	[-34 20]	[-34 20]	[-34 21]	[-34 22]	[-33 22]	[-33 23]	[-32 23]	[-32 24]	[-31 24]	[-30 24]	[-29 24]	[-29 25]	[-28 25]	[-27 25]	[-26 25]	[-25 25]	[-25 26]	[-24 26]	[-23 26]	[-23 27]	[-23 28]	[-22 28]	[-22 29]	[-21 29]	[-20 29]	[-19 29]	[-19 30]	[-18 30]	[-18 31]	[-17 31]	[-16 31]	[-16 32]	[-15 32]	[-14 32]	[-13 32]	[-12 32]	[-11 32]	[-10 32]	[-10 33]	[-10 33]	[-10 34]	[-10 35]	[-9 36]	[-9 37]	[-9 38]	[-9 38]	[-9 39]	[-9 40]	[-9 40]	[-9 41]	[-9 42]	[-8 42]	[-8 43]	[-8 44]	[-53 0]	[-54 0]	[-55 0]	[-56 0]	[-57 0]	[-58 0]	[-59 0]	[-60 0]	[-61 0]	[-7 44]	[-7 45]	[-6 45]	[-6 46]	[-5 46]	[-5 47]	[-4 47]	[-4 48]	[-3 48]	[-3 49]	[-2 49]	[-2 50]	[-1 50]	[-1 51]	[0 51]	[0 52]	[0 53]	[0 54]	[0 55]	[0 56]	[0 57]	[0 58]	[0 59]	[0 60]	[0 61]]
      [
        set pcolor blue
        set land-cover "river"
        ask neighbors [if pcolor = green or pcolor = green - 2 [
          set pcolor 77
          set land-cover "river-buffer"
          set protection-status "riparian"
          ]
        ]
    ]
  ]

  if #-of-rivers = 2 [
    ask patches at-points [[-52 0]	[-51 0]	[-51 1]	[-50 1]	[-50 2]	[-49 2]	[-49 3]	[-48 3]	[-48 4]	[-47 4]	[-47 5]	[-47 6]	[-47 7]	[-47 8]	[-47 9]	[-46 9]	[-45 9]	[-44 9]	[-44 10]	[-43 10]	[-42 10]	[-42 11]	[-41 11]	[-40 11]	[-39 11]	[-39 12]	[-38 12]	[-37 12]	[-36 12]	[-36 12]	[-36 13]	[-36 13]	[-36 14]	[-35 15]	[-35 16]	[-35 16]	[-35 17]	[-35 17]	[-34 18]	[-34 19]	[-34 20]	[-34 20]	[-34 20]	[-34 21]	[-34 22]	[-33 22]	[-33 23]	[-32 23]	[-32 24]	[-31 24]	[-30 24]	[-29 24]	[-29 25]	[-28 25]	[-27 25]	[-26 25]	[-25 25]	[-25 26]	[-24 26]	[-23 26]	[-23 27]	[-23 28]	[-22 28]	[-22 29]	[-21 29]	[-20 29]	[-19 29]	[-19 30]	[-18 30]	[-18 31]	[-17 31]	[-16 31]	[-16 32]	[-15 32]	[-14 32]	[-13 32]	[-12 32]	[-11 32]	[-10 32]	[-10 33]	[-10 33]	[-10 34]	[-10 35]	[-9 36]	[-9 37]	[-9 38]	[-9 38]	[-9 39]	[-9 40]	[-9 40]	[-9 41]	[-9 42]	[-8 42]	[-8 43]	[-8 44]	[-53 0]	[-54 0]	[-55 0]	[-56 0]	[-57 0]	[-58 0]	[-59 0]	[-60 0]	[-61 0]	[-7 44]	[-7 45]	[-6 45]	[-6 46]	[-5 46]	[-5 47]	[-4 47]	[-4 48]	[-3 48]	[-3 49]	[-2 49]	[-2 50]	[-1 50]	[-1 51]	[0 51]	[0 52]	[0 53]	[0 54]	[0 55]	[0 56]	[0 57]	[0 58]	[0 59]	[0 60]	[0 61]	[52 0]	[51 0]	[51 -1]	[50 -1]	[50 -2]	[49 -2]	[49 -3]	[48 -3]	[48 -4]	[47 -4]	[47 -5]	[47 -6]	[47 -7]	[47 -8]	[47 -9]	[46 -9]	[45 -9]	[44 -9]	[44 -10]	[43 -10]	[42 -10]	[42 -11]	[41 -11]	[40 -11]	[39 -11]	[39 -12]	[38 -12]	[37 -12]	[36 -12]	[36 -12]	[36 -13]	[36 -13]	[36 -14]	[35 -15]	[35 -16]	[35 -16]	[35 -17]	[35 -17]	[34 -18]	[34 -19]	[34 -20]	[34 -20]	[34 -20]	[34 -21]	[34 -22]	[33 -22]	[33 -23]	[32 -23]	[32 -24]	[31 -24]	[30 -24]	[29 -24]	[29 -25]	[28 -25]	[27 -25]	[26 -25]	[25 -25]	[25 -26]	[24 -26]	[23 -26]	[23 -27]	[23 -28]	[22 -28]	[22 -29]	[21 -29]	[20 -29]	[19 -29]	[19 -30]	[18 -30]	[18 -31]	[17 -31]	[16 -31]	[16 -32]	[15 -32]	[14 -32]	[13 -32]	[12 -32]	[11 -32]	[10 -32]	[10 -33]	[10 -33]	[10 -34]	[10 -35]	[9 -36]	[9 -37]	[9 -38]	[9 -38]	[9 -39]	[9 -40]	[9 -40]	[9 -41]	[9 -42]	[8 -42]	[8 -43]	[8 -44]	[53 0]	[54 0]	[55 0]	[56 0]	[57 0]	[58 0]	[59 0]	[60 0]	[61 0]	[7 -44]	[7 -45]	[6 -45]	[6 -46]	[5 -46]	[5 -47]	[4 -47]	[4 -48]	[3 -48]	[3 -49]	[2 -49]	[2 -50]	[1 -50]	[1 -51]	[0 -51]	[0 -52]	[0 -53]	[0 -54]	[0 -55]	[0 -56]	[0 -57]	[0 -58]	[0 -59]	[0 -60]	[0 -61]]
      [
        set pcolor blue
        set land-cover "river"
        ask neighbors [if pcolor = green or pcolor = green - 2 [
          set pcolor 77
          set land-cover "river-buffer"
          set protection-status "riparian"
          ]
        ]
    ]
  ]


 if #-of-rivers = 3 [
    ask patches at-points [[-52 0]	[-51 0]	[-51 1]	[-50 1]	[-50 2]	[-49 2]	[-49 3]	[-48 3]	[-48 4]	[-47 4]	[-47 5]	[-47 6]	[-47 7]	[-47 8]	[-47 9]	[-46 9]	[-45 9]	[-44 9]	[-44 10]	[-43 10]	[-42 10]	[-42 11]	[-41 11]	[-40 11]	[-39 11]	[-39 12]	[-38 12]	[-37 12]	[-36 12]	[-36 12]	[-36 13]	[-36 13]	[-36 14]	[-35 15]	[-35 16]	[-35 16]	[-35 17]	[-35 17]	[-34 18]	[-34 19]	[-34 20]	[-34 20]	[-34 20]	[-34 21]	[-34 22]	[-33 22]	[-33 23]	[-32 23]	[-32 24]	[-31 24]	[-30 24]	[-29 24]	[-29 25]	[-28 25]	[-27 25]	[-26 25]	[-25 25]	[-25 26]	[-24 26]	[-23 26]	[-23 27]	[-23 28]	[-22 28]	[-22 29]	[-21 29]	[-20 29]	[-19 29]	[-19 30]	[-18 30]	[-18 31]	[-17 31]	[-16 31]	[-16 32]	[-15 32]	[-14 32]	[-13 32]	[-12 32]	[-11 32]	[-10 32]	[-10 33]	[-10 33]	[-10 34]	[-10 35]	[-9 36]	[-9 37]	[-9 38]	[-9 38]	[-9 39]	[-9 40]	[-9 40]	[-9 41]	[-9 42]	[-8 42]	[-8 43]	[-8 44]	[-53 0]	[-54 0]	[-55 0]	[-56 0]	[-57 0]	[-58 0]	[-59 0]	[-60 0]	[-61 0]	[-7 44]	[-7 45]	[-6 45]	[-6 46]	[-5 46]	[-5 47]	[-4 47]	[-4 48]	[-3 48]	[-3 49]	[-2 49]	[-2 50]	[-1 50]	[-1 51]	[0 51]	[0 52]	[0 53]	[0 54]	[0 55]	[0 56]	[0 57]	[0 58]	[0 59]	[0 60]	[0 61]	[52 0]	[51 0]	[51 -1]	[50 -1]	[50 -2]	[49 -2]	[49 -3]	[48 -3]	[48 -4]	[47 -4]	[47 -5]	[47 -6]	[47 -7]	[47 -8]	[47 -9]	[46 -9]	[45 -9]	[44 -9]	[44 -10]	[43 -10]	[42 -10]	[42 -11]	[41 -11]	[40 -11]	[39 -11]	[39 -12]	[38 -12]	[37 -12]	[36 -12]	[36 -12]	[36 -13]	[36 -13]	[36 -14]	[35 -15]	[35 -16]	[35 -16]	[35 -17]	[35 -17]	[34 -18]	[34 -19]	[34 -20]	[34 -20]	[34 -20]	[34 -21]	[34 -22]	[33 -22]	[33 -23]	[32 -23]	[32 -24]	[31 -24]	[30 -24]	[29 -24]	[29 -25]	[28 -25]	[27 -25]	[26 -25]	[25 -25]	[25 -26]	[24 -26]	[23 -26]	[23 -27]	[23 -28]	[22 -28]	[22 -29]	[21 -29]	[20 -29]	[19 -29]	[19 -30]	[18 -30]	[18 -31]	[17 -31]	[16 -31]	[16 -32]	[15 -32]	[14 -32]	[13 -32]	[12 -32]	[11 -32]	[10 -32]	[10 -33]	[10 -33]	[10 -34]	[10 -35]	[9 -36]	[9 -37]	[9 -38]	[9 -38]	[9 -39]	[9 -40]	[9 -40]	[9 -41]	[9 -42]	[8 -42]	[8 -43]	[8 -44]	[53 0]	[54 0]	[55 0]	[56 0]	[57 0]	[57 1]	[58 1]	[58 2]	[59 2] [59 3] [59 4] [59 5] [59 6] [60 6] [60 7] [61 7] [7 -44]	[7 -45]	[6 -45]	[6 -46]	[5 -46]	[5 -47]	[4 -47]	[4 -48]	[3 -48]	[3 -49]	[2 -49]	[2 -50]	[1 -50]	[1 -51]	[0 -51]	[0 -52]	[0 -53]	[0 -54]	[0 -55]	[0 -56]	[0 -57]	[0 -58]	[0 -59]	[0 -60]	[0 -61] [1 51] [2 51] [3 51] [4 51] [5 51] [6 51] [7 51] [8 51] [9 51] [10 51] [11 51] [12 51] [13 51] [14 51] [14 51] [15 51] [16 51] [16 52] [17 52] [17 53] [18 53] [18 54] [19 54] [19 55] [20 55] [20 56] [21 56] [22 56] [23 56] [24 56] [25 56] [26 56] [27 56] [28 56] [28 57] [29 57] [29 58] [30 58] [30 59] [31 59] [31 60] [32 60] [32 61] [51 1] [51 2] [51 3] [51 4] [51 5] [51 6] [51 7] [51 8] [52 8] [52 9] [52 10] [52 11] [52 12] [52 13] [53 13] [53 14] [53 15] [53 16] [53 17] [54 17] [54 18] [55 18] [55 19] [56 19] [56 20] [56 21] [57 21] [57 22] [58 22] [58 23] [59 23] [59 24] [60 24] [60 25] [61 25]    ]
      [
        set pcolor blue
        set land-cover "river"
        ask neighbors [if pcolor = green or pcolor = green - 2 [
          set pcolor 77
          set land-cover "river-buffer"
          set protection-status "riparian"
          ]
        ]
    ]
  ]
end

to setup-protected-areas
  if #-of-PA = 0 []
  if #-of-PA = 1 [
    ask patches at-points [[-30 -22]	[-23 -24]	[-20 -22]	[-28 -26]	[-25 -21]	[-32 -24]	[-23 -25]	[-30 -24]	[-30 -26]	[-26 -22]	[-22 -19]	[-25 -24]	[-20 -21]	[-23 -30]	[-25 -23]	[-28 -24]	[-19 -21]	[-31 -24]	[-26 -23]	[-23 -22]	[-20 -20]	[-23 -27]	[-29 -22]	[-27 -23]	[-24 -23]	[-26 -25]	[-24 -24]	[-22 -22]	[-31 -25]	[-21 -22]	[-28 -23]	[-23 -28]	[-29 -26]	[-21 -25]	[-22 -27]	[-30 -25]	[-26 -24]	[-23 -21]	[-22 -25]	[-22 -20]	[-24 -20]	[-25 -27]	[-21 -26]	[-24 -28]	[-25 -25]	[-25 -22]	[-31 -23]	[-32 -25]	[-21 -28]	[-29 -23]	[-27 -25]	[-24 -26]	[-23 -20]	[-21 -23]	[-22 -23]	[-21 -27]	[-27 -26]	[-24 -27]	[-21 -24]	[-27 -24]	[-24 -21]	[-29 -24]	[-23 -26]	[-29 -25]	[-22 -21]	[-25 -28]	[-30 -23]	[-23 -29]	[-30 -27]	[-19 -22]	[-26 -21]	[-22 -28]	[-24 -29]	[-28 -22]	[-24 -25]	[-27 -22]	[-31 -26]	[-21 -19]	[-22 -29]	[-22 -24]	[-22 -26]	[-26 -26]	[-21 -21]	[-28 -25]	[-24 -22]	[-21 -20]	[-20 -23]	[-23 -23]	[-25 -26]]
      [
        set pcolor green - 2
        set land-cover "PA"
        set protection-status "PA"
        ask neighbors [if pcolor = green [
          set pcolor green - 1
          set land-cover "PA-buffer"
          set protection-status "buffer"
          ]
        ]
    ]
  ]

  if #-of-PA = 2 [
    ask patches at-points [[-30 -22]	[-23 -24]	[-20 -22]	[-28 -26]	[-25 -21]	[-32 -24]	[-23 -25]	[-30 -24]	[-30 -26]	[-26 -22]	[-22 -19]	[-25 -24]	[-20 -21]	[-23 -30]	[-25 -23]	[-28 -24]	[-19 -21]	[-31 -24]	[-26 -23]	[-23 -22]	[-20 -20]	[-23 -27]	[-29 -22]	[-27 -23]	[-24 -23]	[-26 -25]	[-24 -24]	[-22 -22]	[-31 -25]	[-21 -22]	[-28 -23]	[-23 -28]	[-29 -26]	[-21 -25]	[-22 -27]	[-30 -25]	[-26 -24]	[-23 -21]	[-22 -25]	[-22 -20]	[-24 -20]	[-25 -27]	[-21 -26]	[-24 -28]	[-25 -25]	[-25 -22]	[-31 -23]	[-32 -25]	[-21 -28]	[-29 -23]	[-27 -25]	[-24 -26]	[-23 -20]	[-21 -23]	[-22 -23]	[-21 -27]	[-27 -26]	[-24 -27]	[-21 -24]	[-27 -24]	[-24 -21]	[-29 -24]	[-23 -26]	[-29 -25]	[-22 -21]	[-25 -28]	[-30 -23]	[-23 -29]	[-30 -27]	[-19 -22]	[-26 -21]	[-22 -28]	[-24 -29]	[-28 -22]	[-24 -25]	[-27 -22]	[-31 -26]	[-21 -19]	[-22 -29]	[-22 -24]	[-22 -26]	[-26 -26]	[-21 -21]	[-28 -25]	[-24 -22]	[-21 -20]	[-20 -23]	[-23 -23]	[-25 -26][30 22]	[23 24]	[20 22]	[28 26]	[25 21]	[32 24]	[23 25]	[30 24]	[30 26]	[26 22]	[22 19]	[25 24]	[20 21]	[23 30]	[25 23]	[28 24]	[19 21]	[31 24]	[26 23]	[23 22]	[20 20]	[23 27]	[29 22]	[27 23]	[24 23]	[26 25]	[24 24]	[22 22]	[31 25]	[21 22]	[28 23]	[23 28]	[29 26]	[21 25]	[22 27]	[30 25]	[26 24]	[23 21]	[22 25]	[22 20]	[24 20]	[25 27]	[21 26]	[24 28]	[25 25]	[25 22]	[31 23]	[32 25]	[21 28]	[29 23]	[27 25]	[24 26]	[23 20]	[21 23]	[22 23]	[21 27]	[27 26]	[24 27]	[21 24]	[27 24]	[24 21]	[29 24]	[23 26]	[29 25]	[22 21]	[25 28]	[30 23]	[23 29]	[30 27]	[19 22]	[26 21]	[22 28]	[24 29]	[28 22]	[24 25]	[27 22]	[31 26]	[21 19]	[22 29]	[22 24]	[22 26]	[26 26]	[21 21]	[28 25]	[24 22]	[21 20]	[20 23]	[23 23]	[25 26]]
      [
        set pcolor green - 2
        set land-cover "PA"
        set protection-status "PA"
        ask neighbors [if pcolor = green [
          set pcolor green - 1
          set land-cover "PA-buffer"
          set protection-status "buffer"
          ]
        ]
    ]
  ]

  if #-of-PA = 3 [
    ask patches at-points [[-19 -22]	[-19 -21]	[-20 -23]	[-20 -22]	[-20 -21]	[-20 -20]	[-21 -28]	[-21 -27]	[-21 -26]	[-21 -25]	[-21 -24]	[-21 -23]	[-21 -22]	[-21 -21]	[-21 -20]	[-21 -19]	[-22 -29]	[-22 -28]	[-22 -27]	[-22 -26]	[-22 -25]	[-22 -24]	[-22 -23]	[-22 -22]	[-22 -21]	[-22 -20]	[-22 -19]	[-23 -30]	[-23 -29]	[-23 -28]	[-23 -27]	[-23 -26]	[-23 -25]	[-23 -24]	[-23 -23]	[-23 -22]	[-23 -21]	[-23 -20]	[-24 -29]	[-24 -28]	[-24 -27]	[-24 -26]	[-24 -25]	[-24 -24]	[-24 -23]	[-24 -22]	[-24 -21]	[-24 -20]	[-25 -28]	[-25 -27]	[-25 -26]	[-25 -25]	[-25 -24]	[-25 -23]	[-25 -22]	[-25 -21]	[-26 -26]	[-26 -25]	[-26 -24]	[-26 -23]	[-26 -22]	[-26 -21]	[-27 -26]	[-27 -25]	[-27 -24]	[-27 -23]	[-27 -22]	[-28 -26]	[-28 -25]	[-28 -24]	[-28 -23]	[-28 -22]	[-29 -26]	[-29 -25]	[-29 -24]	[-29 -23]	[-29 -22]	[-30 -27]	[-30 -26]	[-30 -25]	[-30 -24]	[-30 -23]	[-30 -22]	[-31 -26]	[-31 -25]	[-31 -24]	[-31 -23]	[-32 -25]	[-32 -24]	[-21 -29]	[-21 -30]	[-21 -31]	[-21 -32]	[-21 -33]	[-21 -34]	[-21 -35]	[-21 -36]	[-21 -37]	[-21 -38]	[-22 -30]	[-22 -31]	[-22 -32]	[-22 -33]	[-22 -34]	[-22 -35]	[-22 -36]	[-22 -37]	[-22 -38]	[-22 -39]	[-22 -40]	[-23 -31]	[-23 -32]	[-23 -33]	[-23 -34]	[-23 -35]	[-23 -36]	[-23 -37]	[-23 -38]	[-23 -39]	[-23 -40]	[-23 -41]	[-24 -30]	[-24 -31]	[-24 -32]	[-24 -33]	[-24 -34]	[-24 -35]	[-24 -36]	[-24 -37]	[-24 -38]	[-24 -39]	[-24 -40]	[-26 -27]	[-26 -28]	[-26 -29]	[-26 -30]	[-26 -31]	[-26 -32]	[-26 -33]	[-26 -34]	[-26 -35]	[-26 -36]	[-26 -37]	[-27 -27]	[-27 -28]	[-27 -29]	[-27 -30]	[-27 -31]	[-27 -32]	[-27 -33]	[-27 -34]	[-27 -35]	[-27 -36]	[-27 -37]	[-28 -27]	[-28 -28]	[-28 -29]	[-28 -30]	[-28 -31]	[-28 -32]	[-28 -33]	[-28 -34]	[-28 -35]	[-28 -36]	[-28 -37]	[-29 -27]	[-29 -28]	[-29 -29]	[-29 -30]	[-29 -31]	[-29 -32]	[-29 -33]	[-29 -34]	[-29 -35]	[-29 -36]	[-29 -37]	[-30 -28]	[-30 -29]	[-30 -30]	[-30 -31]	[-30 -32]	[-30 -33]	[-30 -34]	[-30 -35]	[-30 -36]	[-30 -37]	[-30 -38]	[-31 -27]	[-31 -28]	[-31 -29]	[-31 -30]	[-31 -31]	[-31 -32]	[-31 -33]	[-31 -34]	[-31 -35]	[-31 -36]	[-31 -37]	[-32 -26]	[-32 -27]	[-32 -28]	[-32 -29]	[-32 -30]	[-32 -31]	[-32 -32]	[-32 -33]	[-32 -34]	[-32 -35]	[-32 -36]	[-25 -29]	[-25 -30]	[-25 -31]	[-25 -32]	[-25 -33]	[-25 -34]	[-25 -35]	[-25 -36]	[-33 -35]	[-33 -34]	[-33 -33]	[-33 -32]	[-33 -31]	[-33 -30]	[-33 -29]	[-33 -28]	[-33 -27]	[-33 -26]	[-34 -35]	[-34 -34]	[-34 -33]	[-34 -32]	[-34 -31]	[-34 -30]	[-34 -29]	[-34 -28]	[-34 -27]	[-34 -26]	[-35 -33]	[-35 -32]	[-35 -31]	[-35 -30]	[-35 -29]	[-35 -28]	[-35 -27]	[-35 -26]	[-35 -25]	[-35 -24]	[-36 -33]	[-36 -32]	[-36 -31]	[-36 -30]	[-36 -29]	[-36 -28]	[-36 -27]	[-36 -26]	[-36 -25]	[-36 -24]	[-37 -31]	[-37 -30]	[-37 -29]	[-37 -28]	[-37 -27]	[-37 -26]	[-37 -25]	[-37 -24]	[-37 -23]	[-38 -31]	[-38 -30]	[-38 -29]	[-38 -28] [-20 -36]	[-20 -35]	[-20 -34]	[-20 -33]	[-20 -32]	[-20 -31]	[-20 -30]	[-20 -29]	[-20 -28]	[-20 -27]	[-20 -26]	[-19 -35]	[-19 -34]	[-19 -33]	[-19 -32]	[-19 -31]	[-19 -30]	[-19 -29]	[-19 -28]	[-19 -27]
                           [19 22]	[19 21]	[20 23]	[20 22]	[20 21]	[20 20]	[21 28]	[21 27]	[21 26]	[21 25]	[21 24]	[21 23]	[21 22]	[21 21]	[21 20]	[21 19]	[22 29]	[22 28]	[22 27]	[22 26]	[22 25]	[22 24]	[22 23]	[22 22]	[22 21]	[22 20]	[22 19]	[23 30]	[23 29]	[23 28]	[23 27]	[23 26]	[23 25]	[23 24]	[23 23]	[23 22]	[23 21]	[23 20]	[24 29]	[24 28]	[24 27]	[24 26]	[24 25]	[24 24]	[24 23]	[24 22]	[24 21]	[24 20]	[25 28]	[25 27]	[25 26]	[25 25]	[25 24]	[25 23]	[25 22]	[25 21]	[26 26]	[26 25]	[26 24]	[26 23]	[26 22]	[26 21]	[27 26]	[27 25]	[27 24]	[27 23]	[27 22]	[28 26]	[28 25]	[28 24]	[28 23]	[28 22]	[29 26]	[29 25]	[29 24]	[29 23]	[29 22]	[30 27]	[30 26]	[30 25]	[30 24]	[30 23]	[30 22]	[31 26]	[31 25]	[31 24]	[31 23]	[32 25]	[32 24]	[21 29]	[21 30]	[21 31]	[21 32]	[21 33]	[21 34]	[21 35]	[21 36]	[21 37]	[21 38]	[22 30]	[22 31]	[22 32]	[22 33]	[22 34]	[22 35]	[22 36]	[22 37]	[22 38]	[22 39]	[22 40]	[23 31]	[23 32]	[23 33]	[23 34]	[23 35]	[23 36]	[23 37]	[23 38]	[23 39]	[23 40]	[23 41]	[24 30]	[24 31]	[24 32]	[24 33]	[24 34]	[24 35]	[24 36]	[24 37]	[24 38]	[24 39]	[24 40]	[26 27]	[26 28]	[26 29]	[26 30]	[26 31]	[26 32]	[26 33]	[26 34]	[26 35]	[26 36]	[26 37]	[27 27]	[27 28]	[27 29]	[27 30]	[27 31]	[27 32]	[27 33]	[27 34]	[27 35]	[27 36]	[27 37]	[28 27]	[28 28]	[28 29]	[28 30]	[28 31]	[28 32]	[28 33]	[28 34]	[28 35]	[28 36]	[28 37]	[29 27]	[29 28]	[29 29]	[29 30]	[29 31]	[29 32]	[29 33]	[29 34]	[29 35]	[29 36]	[29 37]	[30 28]	[30 29]	[30 30]	[30 31]	[30 32]	[30 33]	[30 34]	[30 35]	[30 36]	[30 37]	[30 38]	[31 27]	[31 28]	[31 29]	[31 30]	[31 31]	[31 32]	[31 33]	[31 34]	[31 35]	[31 36]	[31 37]	[32 26]	[32 27]	[32 28]	[32 29]	[32 30]	[32 31]	[32 32]	[32 33]	[32 34]	[32 35]	[32 36]	[25 29]	[25 30]	[25 31]	[25 32]	[25 33]	[25 34]	[25 35]	[25 36]	[33 35]	[33 34]	[33 33]	[33 32]	[33 31]	[33 30]	[33 29]	[33 28]	[33 27]	[33 26]	[34 35]	[34 34]	[34 33]	[34 32]	[34 31]	[34 30]	[34 29]	[34 28]	[34 27]	[34 26]	[35 33]	[35 32]	[35 31]	[35 30]	[35 29]	[35 28]	[35 27]	[35 26]	[35 25]	[35 24]	[36 33]	[36 32]	[36 31]	[36 30]	[36 29]	[36 28]	[36 27]	[36 26]	[36 25]	[36 24]	[37 31]	[37 30]	[37 29]	[37 28]	[37 27]	[37 26]	[37 25]	[37 24]	[37 23]	[38 31]	[38 30]	[38 29]	[38 28] [20 36]	[20 35]	[20 34]	[20 33]	[20 32]	[20 31]	[20 30]	[20 29]	[20 28]	[20 27]	[20 26]	[19 35]	[19 34]	[19 33]	[19 32]	[19 31]	[19 30]	[19 29]	[19 28]	[19 27]
      [-35 30]	[-36 30]	[-37 30]	[-36 31]	[-34 31]	[-38 31]	[-35 31]	[-33 31]	[-32 31]	[-37 31]	[-35 32]	[-33 32]	[-38 32]	[-34 32]	[-32 32]	[-36 32]	[-37 32]	[-39 32]	[-31 32]	[-36 33]	[-37 33]	[-35 33]	[-32 33]	[-33 33]	[-34 33]	[-38 33]	[-30 33]	[-39 33]	[-31 33]	[-35 34]	[-36 34]	[-37 34]	[-32 34]	[-33 34]	[-39 34]	[-30 34]	[-31 34]	[-34 34]	[-38 34]	[-33 35]	[-39 35]	[-34 35]	[-36 35]	[-37 35]	[-32 35]	[-38 35]	[-31 35]	[-30 35]	[-35 35]	[-39 36]	[-31 36]	[-37 36]	[-33 36]	[-38 36]	[-32 36]	[-34 36]	[-36 36]	[-30 36]	[-29 36]	[-35 36]	[-28 37]	[-30 37]	[-32 37]	[-33 37]	[-38 37]	[-37 37]	[-35 37]	[-34 37]	[-39 37]	[-40 37]	[-31 37]	[-36 37]	[-29 37]	[-29 38]	[-30 38]	[-37 38]	[-34 38]	[-33 38]	[-40 38]	[-39 38]	[-32 38]	[-31 38]	[-38 38]	[-35 38]	[-36 38]	[-38 39]	[-32 39]	[-35 39]	[-39 39]	[-30 39]	[-37 39]	[-31 39]	[-36 39]	[-40 39]	[-34 39]	[-41 39]	[-33 39]	[-39 40]	[-40 40]	[-38 40]	[-35 40]	[-36 40]	[-37 40]	[-38 41]	[-39 41]	[-31 40]	[-32 40]	[-33 40]	[-34 40]	[-31 41]	[-32 41]	[-33 41]	[-34 41]	[-31 42]	[-32 42]	[-33 42]	[-34 42]	[-31 43]	[-32 43]	[-33 43]	[-34 43]	[-31 44]	[-32 44]	[-33 44]	[-34 44]	[-31 45]	[-32 45]	[-33 45]	[-34 45]	[-31 46]	[-32 46]	[-33 46]	[-34 46]	[-31 47]	[-32 47]	[-33 47]	[-34 47]	[-31 48]	[-32 48]	[-33 48]	[-34 48]	[-31 49]	[-32 49]	[-33 49]	[-34 49]	[-31 50]	[-32 50]	[-33 50]	[-34 50]	[-31 51]	[-32 51]	[-33 51]	[-34 51]	[-32 52]	[-33 52]	[-33 53]	[-30 43]	[-30 44]	[-30 45]	[-30 46]	[-30 47]	[-30 48]	[-30 49]	[-30 50]	[-30 51]	[-30 52]	[-31 44]	[-31 45]	[-31 46]	[-31 47]	[-31 48]	[-31 49]	[-31 50]	[-31 51]	[-32 46]	[-32 47]	[-32 48]	[-32 49]	[-33 46]	[-33 47]	[-33 48]	[-33 49]	[-35 50]	[-35 49]	[-35 48]	[-35 47]	[-35 46]	[-35 45]	[-35 44]	[-35 43]	[-35 42]	[-35 41]	[-36 50]	[-36 49]	[-36 48]	[-36 47]	[-36 46]	[-36 45]	[-36 44]	[-36 43]	[-36 42]	[-36 41]	[-37 50]	[-37 49]	[-37 48]	[-37 47]	[-37 46]	[-37 45]	[-37 44]	[-37 43]	[-37 42]	[-37 41]	[-29 51]	[-29 50]	[-29 49]	[-29 48]	[-29 47]	[-29 46]	[-29 45]	[-29 44]	[-28 49]	[-28 48]	[-28 47]	[-28 46]	[-28 45]	[-27 48]	[-27 47]	[-27 46]	[-38 46]	[-38 47]	[-38 48]	[-38 49]	[-38 50]	[-38 51]	[-38 52]	[-39 46]	[-39 47]	[-39 48]	[-39 49]	[-39 50]	[-39 51]	[-39 52]	[-40 46]	[-40 47]	[-40 48]	[-40 49]	[-40 50]	[-40 51]	[-41 46]	[-41 47]	[-41 48]	[-41 49]	[-41 50]	[-41 51]	[-42 46]	[-42 47]	[-42 48]	[-42 49]	[-42 50]	[-42 51]	[-43 46]	[-43 47]	[-43 48]	[-43 49]	[-43 50]	[-43 51]	[-44 46]	[-44 47]	[-44 48]	[-44 49]	[-44 50]	[-44 51]	[-45 46]	[-45 47]	[-45 48]	[-45 49]	[-45 50]	[-45 51]	[-46 46]	[-46 47]	[-46 48]	[-46 49]	[-46 50]	[-46 51]	[-47 46]	[-47 47]	[-47 48]	[-47 49]	[-47 50]	[-47 51]	[-48 46]	[-48 47]	[-48 48]	[-48 49]	[-48 50]	[-48 51]	[-49 46]	[-49 47]	[-49 48]	[-49 49]	[-49 50]	[-49 51] [-44 52]	[-45 52]	[-46 52]	[-47 52]	[-48 52]	[-49 52]	[-50 52]	[-45 53]	[-46 53]	[-47 53]	[-48 53]	[-49 53]	[-50 53]	[-46 54]	[-47 54]	[-48 54]	[-49 54]	[-46 55]	[-47 55]	[-48 55]	[-49 55]	[-47 56]	[-48 56] [-45 45]	[-46 45]	[-47 45]	[-48 45]	[-49 45]	[-50 45]	[-51 45]	[-52 45]	[-53 45]	[-54 45]	[-50 46]	[-50 47]	[-51 46]	[-51 47]	[-52 46]	[-53 46]	[-52 47]	[-45 44]	[-46 44]	[-47 44]	[-48 44]	[-49 44]	[-50 44]	[-51 44]	[-52 44]	[-53 44]	[-46 43]	[-47 43]	[-48 43]	[-49 43]	[-50 43]	[-51 43]	[-52 43]	[-53 43]	[-46 42]	[-47 42]	[-48 42]	[-49 42]	[-50 42]	[-51 42]	[-52 42]	[-46 41]	[-47 41]	[-48 41]	[-49 41]	[-50 41]	[-51 41]	[-47 40]	[-48 40]	[-49 40][-38 45]	[-39 45]	[-40 45]	[-41 45]	[-42 45]	[-43 45]	[-44 45]	[-40 36]	[-40 35]	[-40 34]	[-40 33]	[-40 32]	[-41 36]	[-41 35]	[-41 34]	[-41 33]	[-41 32][-50 51]	[-50 50]	[-50 49]	[-50 48]	[-51 51]	[-51 50]	[-51 49]	[-51 48]	[-42 35]	[-42 34]	[-42 33]	[-42 32]	[-42 31]	[-43 35]	[-43 34]	[-43 33]	[-43 32]	[-44 35]	[-44 34]	[-44 33]	[-44 32]	[-45 34]	[-45 33]	[-26 48]	[-26 47]	[-26 46]	[-25 48]	[-25 47]	[-25 46]	[-25 45]	[-25 49]	[-24 48]	[-24 47]	[-24 46]	[-24 45]	[-24 49]	[-23 48]	[-23 47]	[-23 46]	[-23 45]	[-23 49]	[-25 49]	[-26 49]	[-27 49]	[-22 47]	[-22 46]	[-22 45]	[-21 47]	[-21 46]	[-21 45][-22 48][-24 44]	[-23 44]	[-22 44]
    ]
      [
        set pcolor green - 2
        set land-cover "PA"
        set protection-status "PA"
        ask neighbors [if pcolor = green [
          set pcolor green - 1
          set land-cover "PA-buffer"
          set protection-status "buffer"
          ]
        ]
    ]
  ]

  if #-of-PA = 4 [
    ask patches at-points [[-19 -22]	[-19 -21]	[-20 -23]	[-20 -22]	[-20 -21]	[-20 -20]	[-21 -28]	[-21 -27]	[-21 -26]	[-21 -25]	[-21 -24]	[-21 -23]	[-21 -22]	[-21 -21]	[-21 -20]	[-21 -19]	[-22 -29]	[-22 -28]	[-22 -27]	[-22 -26]	[-22 -25]	[-22 -24]	[-22 -23]	[-22 -22]	[-22 -21]	[-22 -20]	[-22 -19]	[-23 -30]	[-23 -29]	[-23 -28]	[-23 -27]	[-23 -26]	[-23 -25]	[-23 -24]	[-23 -23]	[-23 -22]	[-23 -21]	[-23 -20]	[-24 -29]	[-24 -28]	[-24 -27]	[-24 -26]	[-24 -25]	[-24 -24]	[-24 -23]	[-24 -22]	[-24 -21]	[-24 -20]	[-25 -28]	[-25 -27]	[-25 -26]	[-25 -25]	[-25 -24]	[-25 -23]	[-25 -22]	[-25 -21]	[-26 -26]	[-26 -25]	[-26 -24]	[-26 -23]	[-26 -22]	[-26 -21]	[-27 -26]	[-27 -25]	[-27 -24]	[-27 -23]	[-27 -22]	[-28 -26]	[-28 -25]	[-28 -24]	[-28 -23]	[-28 -22]	[-29 -26]	[-29 -25]	[-29 -24]	[-29 -23]	[-29 -22]	[-30 -27]	[-30 -26]	[-30 -25]	[-30 -24]	[-30 -23]	[-30 -22]	[-31 -26]	[-31 -25]	[-31 -24]	[-31 -23]	[-32 -25]	[-32 -24]	[-21 -29]	[-21 -30]	[-21 -31]	[-21 -32]	[-21 -33]	[-21 -34]	[-21 -35]	[-21 -36]	[-21 -37]	[-21 -38]	[-22 -30]	[-22 -31]	[-22 -32]	[-22 -33]	[-22 -34]	[-22 -35]	[-22 -36]	[-22 -37]	[-22 -38]	[-22 -39]	[-22 -40]	[-23 -31]	[-23 -32]	[-23 -33]	[-23 -34]	[-23 -35]	[-23 -36]	[-23 -37]	[-23 -38]	[-23 -39]	[-23 -40]	[-23 -41]	[-24 -30]	[-24 -31]	[-24 -32]	[-24 -33]	[-24 -34]	[-24 -35]	[-24 -36]	[-24 -37]	[-24 -38]	[-24 -39]	[-24 -40]	[-26 -27]	[-26 -28]	[-26 -29]	[-26 -30]	[-26 -31]	[-26 -32]	[-26 -33]	[-26 -34]	[-26 -35]	[-26 -36]	[-26 -37]	[-27 -27]	[-27 -28]	[-27 -29]	[-27 -30]	[-27 -31]	[-27 -32]	[-27 -33]	[-27 -34]	[-27 -35]	[-27 -36]	[-27 -37]	[-28 -27]	[-28 -28]	[-28 -29]	[-28 -30]	[-28 -31]	[-28 -32]	[-28 -33]	[-28 -34]	[-28 -35]	[-28 -36]	[-28 -37]	[-29 -27]	[-29 -28]	[-29 -29]	[-29 -30]	[-29 -31]	[-29 -32]	[-29 -33]	[-29 -34]	[-29 -35]	[-29 -36]	[-29 -37]	[-30 -28]	[-30 -29]	[-30 -30]	[-30 -31]	[-30 -32]	[-30 -33]	[-30 -34]	[-30 -35]	[-30 -36]	[-30 -37]	[-30 -38]	[-31 -27]	[-31 -28]	[-31 -29]	[-31 -30]	[-31 -31]	[-31 -32]	[-31 -33]	[-31 -34]	[-31 -35]	[-31 -36]	[-31 -37]	[-32 -26]	[-32 -27]	[-32 -28]	[-32 -29]	[-32 -30]	[-32 -31]	[-32 -32]	[-32 -33]	[-32 -34]	[-32 -35]	[-32 -36]	[-25 -29]	[-25 -30]	[-25 -31]	[-25 -32]	[-25 -33]	[-25 -34]	[-25 -35]	[-25 -36]	[-33 -35]	[-33 -34]	[-33 -33]	[-33 -32]	[-33 -31]	[-33 -30]	[-33 -29]	[-33 -28]	[-33 -27]	[-33 -26]	[-34 -35]	[-34 -34]	[-34 -33]	[-34 -32]	[-34 -31]	[-34 -30]	[-34 -29]	[-34 -28]	[-34 -27]	[-34 -26]	[-35 -33]	[-35 -32]	[-35 -31]	[-35 -30]	[-35 -29]	[-35 -28]	[-35 -27]	[-35 -26]	[-35 -25]	[-35 -24]	[-36 -33]	[-36 -32]	[-36 -31]	[-36 -30]	[-36 -29]	[-36 -28]	[-36 -27]	[-36 -26]	[-36 -25]	[-36 -24]	[-37 -31]	[-37 -30]	[-37 -29]	[-37 -28]	[-37 -27]	[-37 -26]	[-37 -25]	[-37 -24]	[-37 -23]	[-38 -31]	[-38 -30]	[-38 -29]	[-38 -28][-20 -36]	[-20 -35]	[-20 -34]	[-20 -33]	[-20 -32]	[-20 -31]	[-20 -30]	[-20 -29]	[-20 -28]	[-20 -27]	[-20 -26][-19 -35]	[-19 -34]	[-19 -33]	[-19 -32]	[-19 -31]	[-19 -30]	[-19 -29]	[-19 -28]	[-19 -27]	[-18 -34]	[-18 -33]	[-18 -32]	[-18 -31]	[-18 -30]	[-18 -29]	[-18 -28] [-17 -28]	[-17 -29]	[-17 -30]	[-17 -31]	[-17 -32]	[-17 -33]	[-17 -34]	[-16 -28]	[-16 -29]	[-16 -30]	[-16 -31]	[-16 -32]	[-16 -33]	[-16 -34]	[-15 -29]	[-15 -30]	[-15 -31]	[-15 -32]	[-15 -33]	[-14 -29]	[-14 -30]	[-14 -31]	[-14 -32]	[-14 -33]	[-13 -29]	[-13 -30]	[-13 -31]	[-13 -32]	[-13 -33]	[-12 -29]	[-12 -30]	[-12 -31]	[-12 -32]	[-12 -33]	[-11 -30]	[-11 -31]	[-11 -32]	[-10 -30]	[-10 -31]	[-10 -32]	[-9 -31] [-25 -37]	[-25 -38]	[-26 -38]	[-27 -38]	[-28 -38]	[-29 -38]	[-34 -24]	[-33 -24]	[-34 -25]	[-33 -25] [-38 -27]	[-38 -26]	[-38 -25]	[-38 -24]	[-38 -23]	[-38 -22]	[-39 -27]	[-39 -26]	[-39 -25]	[-39 -24]	[-39 -23]	[-39 -22]	[-39 -21]	[-40 -27]	[-40 -26]	[-40 -25]	[-40 -24]	[-40 -23]	[-40 -22]	[-40 -21]	[-30 -39]	[-29 -39]	[-28 -39]	[-27 -39]	[-26 -39]	[-25 -39]	[-25 -40]	[-26 -40]	[-27 -40]	[-28 -40]	[-29 -40]	[-15 -28]	[-14 -28]	[-13 -28]	[-12 -28]
                           [19 22]	[19 21]	[20 23]	[20 22]	[20 21]	[20 20]	[21 28]	[21 27]	[21 26]	[21 25]	[21 24]	[21 23]	[21 22]	[21 21]	[21 20]	[21 19]	[22 29]	[22 28]	[22 27]	[22 26]	[22 25]	[22 24]	[22 23]	[22 22]	[22 21]	[22 20]	[22 19]	[23 30]	[23 29]	[23 28]	[23 27]	[23 26]	[23 25]	[23 24]	[23 23]	[23 22]	[23 21]	[23 20]	[24 29]	[24 28]	[24 27]	[24 26]	[24 25]	[24 24]	[24 23]	[24 22]	[24 21]	[24 20]	[25 28]	[25 27]	[25 26]	[25 25]	[25 24]	[25 23]	[25 22]	[25 21]	[26 26]	[26 25]	[26 24]	[26 23]	[26 22]	[26 21]	[27 26]	[27 25]	[27 24]	[27 23]	[27 22]	[28 26]	[28 25]	[28 24]	[28 23]	[28 22]	[29 26]	[29 25]	[29 24]	[29 23]	[29 22]	[30 27]	[30 26]	[30 25]	[30 24]	[30 23]	[30 22]	[31 26]	[31 25]	[31 24]	[31 23]	[32 25]	[32 24]	[21 29]	[21 30]	[21 31]	[21 32]	[21 33]	[21 34]	[21 35]	[21 36]	[21 37]	[21 38]	[22 30]	[22 31]	[22 32]	[22 33]	[22 34]	[22 35]	[22 36]	[22 37]	[22 38]	[22 39]	[22 40]	[23 31]	[23 32]	[23 33]	[23 34]	[23 35]	[23 36]	[23 37]	[23 38]	[23 39]	[23 40]	[23 41]	[24 30]	[24 31]	[24 32]	[24 33]	[24 34]	[24 35]	[24 36]	[24 37]	[24 38]	[24 39]	[24 40]	[26 27]	[26 28]	[26 29]	[26 30]	[26 31]	[26 32]	[26 33]	[26 34]	[26 35]	[26 36]	[26 37]	[27 27]	[27 28]	[27 29]	[27 30]	[27 31]	[27 32]	[27 33]	[27 34]	[27 35]	[27 36]	[27 37]	[28 27]	[28 28]	[28 29]	[28 30]	[28 31]	[28 32]	[28 33]	[28 34]	[28 35]	[28 36]	[28 37]	[29 27]	[29 28]	[29 29]	[29 30]	[29 31]	[29 32]	[29 33]	[29 34]	[29 35]	[29 36]	[29 37]	[30 28]	[30 29]	[30 30]	[30 31]	[30 32]	[30 33]	[30 34]	[30 35]	[30 36]	[30 37]	[30 38]	[31 27]	[31 28]	[31 29]	[31 30]	[31 31]	[31 32]	[31 33]	[31 34]	[31 35]	[31 36]	[31 37]	[32 26]	[32 27]	[32 28]	[32 29]	[32 30]	[32 31]	[32 32]	[32 33]	[32 34]	[32 35]	[32 36]	[25 29]	[25 30]	[25 31]	[25 32]	[25 33]	[25 34]	[25 35]	[25 36]	[33 35]	[33 34]	[33 33]	[33 32]	[33 31]	[33 30]	[33 29]	[33 28]	[33 27]	[33 26]	[34 35]	[34 34]	[34 33]	[34 32]	[34 31]	[34 30]	[34 29]	[34 28]	[34 27]	[34 26]	[35 33]	[35 32]	[35 31]	[35 30]	[35 29]	[35 28]	[35 27]	[35 26]	[35 25]	[35 24]	[36 33]	[36 32]	[36 31]	[36 30]	[36 29]	[36 28]	[36 27]	[36 26]	[36 25]	[36 24]	[37 31]	[37 30]	[37 29]	[37 28]	[37 27]	[37 26]	[37 25]	[37 24]	[37 23]	[38 31]	[38 30]	[38 29]	[38 28] [20 36]	[20 35]	[20 34]	[20 33]	[20 32]	[20 31]	[20 30]	[20 29]	[20 28]	[20 27]	[20 26][19 35]	[19 34]	[19 33]	[19 32]	[19 31]	[19 30]	[19 29]	[19 28]	[19 27]	[18 34]	[18 33]	[18 32]	[18 31]	[18 30]	[18 29]	[18 28][17 28]	[17 29]	[17 30]	[17 31]	[17 32]	[17 33]	[17 34]	[16 28]	[16 29]	[16 30]	[16 31]	[16 32]	[16 33]	[16 34]	[15 29]	[15 30]	[15 31]	[15 32]	[15 33]	[14 29]	[14 30]	[14 31]	[14 32]	[14 33]	[13 29]	[13 30]	[13 31]	[13 32]	[13 33]	[12 29]	[12 30]	[12 31]	[12 32]	[12 33]	[11 30]	[11 31]	[11 32]	[10 30]	[10 31]	[10 32]	[9 31]	[25 37]	[25 38]	[26 38]	[27 38]	[28 38]	[29 38]	[34 24]	[33 24]	[34 25]	[33 25][38 27]	[38 26]	[38 25]	[38 24]	[38 23]	[38 22]	[39 27]	[39 26]	[39 25]	[39 24]	[39 23]	[39 22]	[39 21]	[40 27]	[40 26]	[40 25]	[40 24]	[40 23]	[40 22]	[40 21]	[30 39]	[29 39]	[28 39]	[27 39]	[26 39]	[25 39]	[25 40]	[26 40]	[27 40]	[28 40]	[29 40]	[15 28]	[14 28]	[13 28]	[12 28]
                           [-35 30]	[-36 30]	[-37 30]	[-36 31]	[-34 31]	[-38 31]	[-35 31]	[-33 31]	[-32 31]	[-37 31]	[-35 32]	[-33 32]	[-38 32]	[-34 32]	[-32 32]	[-36 32]	[-37 32]	[-39 32]	[-31 32]	[-36 33]	[-37 33]	[-35 33]	[-32 33]	[-33 33]	[-34 33]	[-38 33]	[-30 33]	[-39 33]	[-31 33]	[-35 34]	[-36 34]	[-37 34]	[-32 34]	[-33 34]	[-39 34]	[-30 34]	[-31 34]	[-34 34]	[-38 34]	[-33 35]	[-39 35]	[-34 35]	[-36 35]	[-37 35]	[-32 35]	[-38 35]	[-31 35]	[-30 35]	[-35 35]	[-39 36]	[-31 36]	[-37 36]	[-33 36]	[-38 36]	[-32 36]	[-34 36]	[-36 36]	[-30 36]	[-29 36]	[-35 36]	[-28 37]	[-30 37]	[-32 37]	[-33 37]	[-38 37]	[-37 37]	[-35 37]	[-34 37]	[-39 37]	[-40 37]	[-31 37]	[-36 37]	[-29 37]	[-29 38]	[-30 38]	[-37 38]	[-34 38]	[-33 38]	[-40 38]	[-39 38]	[-32 38]	[-31 38]	[-38 38]	[-35 38]	[-36 38]	[-38 39]	[-32 39]	[-35 39]	[-39 39]	[-30 39]	[-37 39]	[-31 39]	[-36 39]	[-40 39]	[-34 39]	[-41 39]	[-33 39]	[-39 40]	[-40 40]	[-38 40]	[-35 40]	[-36 40]	[-37 40]	[-38 41]	[-39 41]	[-31 40]	[-32 40]	[-33 40]	[-34 40]	[-31 41]	[-32 41]	[-33 41]	[-34 41]	[-31 42]	[-32 42]	[-33 42]	[-34 42]	[-31 43]	[-32 43]	[-33 43]	[-34 43]	[-31 44]	[-32 44]	[-33 44]	[-34 44]	[-31 45]	[-32 45]	[-33 45]	[-34 45]	[-31 46]	[-32 46]	[-33 46]	[-34 46]	[-31 47]	[-32 47]	[-33 47]	[-34 47]	[-31 48]	[-32 48]	[-33 48]	[-34 48]	[-31 49]	[-32 49]	[-33 49]	[-34 49]	[-31 50]	[-32 50]	[-33 50]	[-34 50]	[-31 51]	[-32 51]	[-33 51]	[-34 51]	[-32 52]	[-33 52]	[-33 53]	[-30 43]	[-30 44]	[-30 45]	[-30 46]	[-30 47]	[-30 48]	[-30 49]	[-30 50]	[-30 51]	[-30 52]	[-31 44]	[-31 45]	[-31 46]	[-31 47]	[-31 48]	[-31 49]	[-31 50]	[-31 51]	[-32 46]	[-32 47]	[-32 48]	[-32 49]	[-33 46]	[-33 47]	[-33 48]	[-33 49]	[-35 50]	[-35 49]	[-35 48]	[-35 47]	[-35 46]	[-35 45]	[-35 44]	[-35 43]	[-35 42]	[-35 41]	[-36 50]	[-36 49]	[-36 48]	[-36 47]	[-36 46]	[-36 45]	[-36 44]	[-36 43]	[-36 42]	[-36 41]	[-37 50]	[-37 49]	[-37 48]	[-37 47]	[-37 46]	[-37 45]	[-37 44]	[-37 43]	[-37 42]	[-37 41]	[-29 51]	[-29 50]	[-29 49]	[-29 48]	[-29 47]	[-29 46]	[-29 45]	[-29 44]	[-28 49]	[-28 48]	[-28 47]	[-28 46]	[-28 45]	[-27 48]	[-27 47]	[-27 46]	[-38 46]	[-38 47]	[-38 48]	[-38 49]	[-38 50]	[-38 51]	[-38 52]	[-39 46]	[-39 47]	[-39 48]	[-39 49]	[-39 50]	[-39 51]	[-39 52]	[-40 46]	[-40 47]	[-40 48]	[-40 49]	[-40 50]	[-40 51]	[-41 46]	[-41 47]	[-41 48]	[-41 49]	[-41 50]	[-41 51]	[-42 46]	[-42 47]	[-42 48]	[-42 49]	[-42 50]	[-42 51]	[-43 46]	[-43 47]	[-43 48]	[-43 49]	[-43 50]	[-43 51]	[-44 46]	[-44 47]	[-44 48]	[-44 49]	[-44 50]	[-44 51]	[-45 46]	[-45 47]	[-45 48]	[-45 49]	[-45 50]	[-45 51]	[-46 46]	[-46 47]	[-46 48]	[-46 49]	[-46 50]	[-46 51]	[-47 46]	[-47 47]	[-47 48]	[-47 49]	[-47 50]	[-47 51]	[-48 46]	[-48 47]	[-48 48]	[-48 49]	[-48 50]	[-48 51]	[-49 46]	[-49 47]	[-49 48]	[-49 49]	[-49 50]	[-49 51] [-44 52]	[-45 52]	[-46 52]	[-47 52]	[-48 52]	[-49 52]	[-50 52]	[-45 53]	[-46 53]	[-47 53]	[-48 53]	[-49 53]	[-50 53]	[-46 54]	[-47 54]	[-48 54]	[-49 54]	[-46 55]	[-47 55]	[-48 55]	[-49 55]	[-47 56]	[-48 56] [-45 45]	[-46 45]	[-47 45]	[-48 45]	[-49 45]	[-50 45]	[-51 45]	[-52 45]	[-53 45]	[-54 45]	[-50 46]	[-50 47]	[-51 46]	[-51 47]	[-52 46]	[-53 46]	[-52 47]	[-45 44]	[-46 44]	[-47 44]	[-48 44]	[-49 44]	[-50 44]	[-51 44]	[-52 44]	[-53 44]	[-46 43]	[-47 43]	[-48 43]	[-49 43]	[-50 43]	[-51 43]	[-52 43]	[-53 43]	[-46 42]	[-47 42]	[-48 42]	[-49 42]	[-50 42]	[-51 42]	[-52 42]	[-46 41]	[-47 41]	[-48 41]	[-49 41]	[-50 41]	[-51 41]	[-47 40]	[-48 40]	[-49 40][-38 45]	[-39 45]	[-40 45]	[-41 45]	[-42 45]	[-43 45]	[-44 45]	[-40 36]	[-40 35]	[-40 34]	[-40 33]	[-40 32]	[-41 36]	[-41 35]	[-41 34]	[-41 33]	[-41 32][-50 51]	[-50 50]	[-50 49]	[-50 48]	[-51 51]	[-51 50]	[-51 49]	[-51 48]	[-42 35]	[-42 34]	[-42 33]	[-42 32]	[-42 31]	[-43 35]	[-43 34]	[-43 33]	[-43 32]	[-44 35]	[-44 34]	[-44 33]	[-44 32]	[-45 34]	[-45 33]	[-26 48]	[-26 47]	[-26 46]	[-25 48]	[-25 47]	[-25 46]	[-25 45]	[-25 49]	[-24 48]	[-24 47]	[-24 46]	[-24 45]	[-24 49]	[-23 48]	[-23 47]	[-23 46]	[-23 45]	[-23 49]	[-25 49]	[-26 49]	[-27 49]	[-22 47]	[-22 46]	[-22 45]	[-21 47]	[-21 46]	[-21 45][-22 48]	[-24 44]	[-23 44]	[-22 44]	[-23 43] [-45 43]	[-44 43]	[-43 43]	[-42 43]	[-41 43]	[-40 43]	[-39 43]	[-38 43] [-44 44] [-43 44] [-42 44] [-41 44] [-40 44] [-39 44] [-38 44] [-38 42]	[-39 42]	[-40 42]	[-41 42]	[-42 42]	[-43 42]	[-44 42]	[-45 42]	[-40 41]	[-41 41]	[-42 41]	[-43 41]	[-44 41]	[-45 41]	[-41 40]	[-42 40]	[-43 40]	[-44 40]	[-45 40]	[-42 39]	[-43 39]	[-44 39]	[-45 39]	[-46 39]	[-47 39]	[-48 39]	[-41 38]	[-42 38]	[-43 38]	[-44 38]	[-45 38]	[-46 38]	[-47 38]	[-48 38]	[-41 37]	[-42 37]	[-43 37]	[-44 37]	[-45 37]	[-46 37]	[-47 37]	[-42 36]	[-43 36]	[-44 36]	[-45 36]	[-24 42]	[-25 41]	[-26 40]	[-27 39]	[-28 38]	[-27 38]	[-28 39]	[-29 39]	[-29 40]	[-30 41]	[-30 42]	[-29 42]	[-29 41]	[-29 43]	[-28 43]	[-28 44]	[-26 44]	[-27 44]	[-26 45]	[-27 45]	[-25 44]	[-25 43]	[-26 43]	[-27 43]	[-26 42]	[-27 42]	[-26 41]	[-27 41]	[-26 40]	[-27 40][-46 40]	[-30 40]	[-28 40]	[-28 41]	[-28 42]	[-24 43]	[-25 42]	[-28 50]	[-27 50]	[-26 50]	[-25 50]	[-24 50]	[-23 50]	[-22 50]	[-21 50]	[-28 51]	[-27 51]	[-26 51]	[-25 51]	[-24 51]	[-23 51]	[-22 51]	[-21 51]	[-28 52]	[-27 52]	[-26 52]	[-25 52]	[-24 52]	[-23 52]	[-22 52]	[-21 52]	[-21 51]	[-25 53]	[-24 53]	[-52 52]	[-52 51]	[-52 50]	[-52 49]	[-52 48]	[-52 52]	[-52 51]	[-52 50]	[-52 49]	[-52 48]	[-52 47]	[-53 52]	[-54 52][-53 47]	[-53 48]	[-53 49]	[-53 50]	[-53 51]	[-54 47]	[-54 48]	[-54 49]	[-54 50]	[-54 51]	[-55 50]	[-55 49]	[-55 48]	[-55 47]	[-55 46]	[-55 51][-54 46]
                           [35 -30]	[36 -30]	[37 -30]	[36 -31]	[34 -31]	[38 -31]	[35 -31]	[33 -31]	[32 -31]	[37 -31]	[35 -32]	[33 -32]	[38 -32]	[34 -32]	[32 -32]	[36 -32]	[37 -32]	[39 -32]	[31 -32]	[36 -33]	[37 -33]	[35 -33]	[32 -33]	[33 -33]	[34 -33]	[38 -33]	[30 -33]	[39 -33]	[31 -33]	[35 -34]	[36 -34]	[37 -34]	[32 -34]	[33 -34]	[39 -34]	[30 -34]	[31 -34]	[34 -34]	[38 -34]	[33 -35]	[39 -35]	[34 -35]	[36 -35]	[37 -35]	[32 -35]	[38 -35]	[31 -35]	[30 -35]	[35 -35]	[39 -36]	[31 -36]	[37 -36]	[33 -36]	[38 -36]	[32 -36]	[34 -36]	[36 -36]	[30 -36]	[29 -36]	[35 -36]	[28 -37]	[30 -37]	[32 -37]	[33 -37]	[38 -37]	[37 -37]	[35 -37]	[34 -37]	[39 -37]	[40 -37]	[31 -37]	[36 -37]	[29 -37]	[29 -38]	[30 -38]	[37 -38]	[34 -38]	[33 -38]	[40 -38]	[39 -38]	[32 -38]	[31 -38]	[38 -38]	[35 -38]	[36 -38]	[38 -39]	[32 -39]	[35 -39]	[39 -39]	[30 -39]	[37 -39]	[31 -39]	[36 -39]	[40 -39]	[34 -39]	[41 -39]	[33 -39]	[39 -40]	[40 -40]	[38 -40]	[35 -40]	[36 -40]	[37 -40]	[38 -41]	[39 -41]	[31 -40]	[32 -40]	[33 -40]	[34 -40]	[31 -41]	[32 -41]	[33 -41]	[34 -41]	[31 -42]	[32 -42]	[33 -42]	[34 -42]	[31 -43]	[32 -43]	[33 -43]	[34 -43]	[31 -44]	[32 -44]	[33 -44]	[34 -44]	[31 -45]	[32 -45]	[33 -45]	[34 -45]	[31 -46]	[32 -46]	[33 -46]	[34 -46]	[31 -47]	[32 -47]	[33 -47]	[34 -47]	[31 -48]	[32 -48]	[33 -48]	[34 -48]	[31 -49]	[32 -49]	[33 -49]	[34 -49]	[31 -50]	[32 -50]	[33 -50]	[34 -50]	[31 -51]	[32 -51]	[33 -51]	[34 -51]	[32 -52]	[33 -52]	[33 -53]	[30 -43]	[30 -44]	[30 -45]	[30 -46]	[30 -47]	[30 -48]	[30 -49]	[30 -50]	[30 -51]	[30 -52]	[31 -44]	[31 -45]	[31 -46]	[31 -47]	[31 -48]	[31 -49]	[31 -50]	[31 -51]	[32 -46]	[32 -47]	[32 -48]	[32 -49]	[33 -46]	[33 -47]	[33 -48]	[33 -49]	[35 -50]	[35 -49]	[35 -48]	[35 -47]	[35 -46]	[35 -45]	[35 -44]	[35 -43]	[35 -42]	[35 -41]	[36 -50]	[36 -49]	[36 -48]	[36 -47]	[36 -46]	[36 -45]	[36 -44]	[36 -43]	[36 -42]	[36 -41]	[37 -50]	[37 -49]	[37 -48]	[37 -47]	[37 -46]	[37 -45]	[37 -44]	[37 -43]	[37 -42]	[37 -41]	[29 -51]	[29 -50]	[29 -49]	[29 -48]	[29 -47]	[29 -46]	[29 -45]	[29 -44]	[28 -49]	[28 -48]	[28 -47]	[28 -46]	[28 -45]	[27 -48]	[27 -47]	[27 -46]	[38 -46]	[38 -47]	[38 -48]	[38 -49]	[38 -50]	[38 -51]	[38 -52]	[39 -46]	[39 -47]	[39 -48]	[39 -49]	[39 -50]	[39 -51]	[39 -52]	[40 -46]	[40 -47]	[40 -48]	[40 -49]	[40 -50]	[40 -51]	[41 -46]	[41 -47]	[41 -48]	[41 -49]	[41 -50]	[41 -51]	[42 -46]	[42 -47]	[42 -48]	[42 -49]	[42 -50]	[42 -51]	[43 -46]	[43 -47]	[43 -48]	[43 -49]	[43 -50]	[43 -51]	[44 -46]	[44 -47]	[44 -48]	[44 -49]	[44 -50]	[44 -51]	[45 -46]	[45 -47]	[45 -48]	[45 -49]	[45 -50]	[45 -51]	[46 -46]	[46 -47]	[46 -48]	[46 -49]	[46 -50]	[46 -51]	[47 -46]	[47 -47]	[47 -48]	[47 -49]	[47 -50]	[47 -51]	[48 -46]	[48 -47]	[48 -48]	[48 -49]	[48 -50]	[48 -51]	[49 -46]	[49 -47]	[49 -48]	[49 -49]	[49 -50]	[49 -51]	[44 -52]	[45 -52]	[46 -52]	[47 -52]	[48 -52]	[49 -52]	[50 -52]	[45 -53]	[46 -53]	[47 -53]	[48 -53]	[49 -53]	[50 -53]	[46 -54]	[47 -54]	[48 -54]	[49 -54]	[46 -55]	[47 -55]	[48 -55]	[49 -55]	[47 -56]	[48 -56]	[45 -45]	[46 -45]	[47 -45]	[48 -45]	[49 -45]	[50 -45]	[51 -45]	[52 -45]	[53 -45]	[54 -45]	[50 -46]	[50 -47]	[51 -46]	[51 -47]	[52 -46]	[53 -46]	[52 -47]	[45 -44]	[46 -44]	[47 -44]	[48 -44]	[49 -44]	[50 -44]	[51 -44]	[52 -44]	[53 -44]	[46 -43]	[47 -43]	[48 -43]	[49 -43]	[50 -43]	[51 -43]	[52 -43]	[53 -43]	[46 -42]	[47 -42]	[48 -42]	[49 -42]	[50 -42]	[51 -42]	[52 -42]	[46 -41]	[47 -41]	[48 -41]	[49 -41]	[50 -41]	[51 -41]	[47 -40]	[48 -40]	[49 -40]	[38 -45]	[39 -45]	[40 -45]	[41 -45]	[42 -45]	[43 -45]	[44 -45]	[40 -36]	[40 -35]	[40 -34]	[40 -33]	[40 -32]	[41 -36]	[41 -35]	[41 -34]	[41 -33]	[41 -32]	[50 -51]	[50 -50]	[50 -49]	[50 -48]	[51 -51]	[51 -50]	[51 -49]	[51 -48]	[42 -35]	[42 -34]	[42 -33]	[42 -32]	[42 -31]	[43 -35]	[43 -34]	[43 -33]	[43 -32]	[44 -35]	[44 -34]	[44 -33]	[44 -32]	[45 -34]	[45 -33]	[26 -48]	[26 -47]	[26 -46]	[25 -48]	[25 -47]	[25 -46]	[25 -45]	[25 -49]	[24 -48]	[24 -47]	[24 -46]	[24 -45]	[24 -49]	[23 -48]	[23 -47]	[23 -46]	[23 -45]	[23 -49]	[25 -49]	[26 -49]	[27 -49]	[22 -47]	[22 -46]	[22 -45]	[21 -47]	[21 -46]	[21 -45]	[22 -48]	[24 -44]	[23 -44]	[22 -44]	[23 -43] [44 -44]	[43 -44]	[42 -44]	[41 -44]	[40 -44]	[39 -44]	[38 -44]	[45 -43]	[44 -43]	[43 -43]	[42 -43]	[41 -43]	[40 -43]	[39 -43]	[38 -43] [38 -42]	[39 -42]	[40 -42]	[41 -42]	[42 -42]	[43 -42]	[44 -42]	[45 -42]	[40 -41]	[41 -41]	[42 -41]	[43 -41]	[44 -41]	[45 -41]	[41 -40]	[42 -40]	[43 -40]	[44 -40]	[45 -40]	[42 -39]	[43 -39]	[44 -39]	[45 -39]	[46 -39]	[47 -39]	[48 -39]	[41 -38]	[42 -38]	[43 -38]	[44 -38]	[45 -38]	[46 -38]	[47 -38]	[48 -38]	[41 -37]	[42 -37]	[43 -37]	[44 -37]	[45 -37]	[46 -37]	[47 -37]	[42 -36]	[43 -36]	[44 -36]	[45 -36]	[24 -42]	[25 -41]	[26 -40]	[27 -39]	[28 -38]	[27 -38]	[28 -39]	[29 -39]	[29 -40]	[30 -41]	[30 -42]	[29 -42]	[29 -41]	[29 -43]	[28 -43]	[28 -44]	[26 -44]	[27 -44]	[26 -45]	[27 -45]	[25 -44]	[25 -43]	[26 -43]	[27 -43]	[26 -42]	[27 -42]	[26 -41]	[27 -41]	[26 -40]	[27 -40]	[46 -40]	[30 -40]	[28 -40]	[28 -41]	[28 -42]	[24 -43]	[25 -42]	[28 -50]	[27 -50]	[26 -50]	[25 -50]	[24 -50]	[23 -50]	[22 -50]	[21 -50]	[28 -51]	[27 -51]	[26 -51]	[25 -51]	[24 -51]	[23 -51]	[22 -51]	[21 -51]	[28 -52]	[27 -52]	[26 -52]	[25 -52]	[24 -52]	[23 -52]	[22 -52]	[21 -52]	[21 -51]	[25 -53]	[24 -53]	[52 -52]	[52 -51]	[52 -50]	[52 -49]	[52 -48]	[52 -52]	[52 -51]	[52 -50]	[52 -49]	[52 -48]	[52 -47]	[53 -52]	[54 -52]	[53 -47]	[53 -48]	[53 -49]	[53 -50]	[53 -51]	[54 -47]	[54 -48]	[54 -49]	[54 -50]	[54 -51]	[55 -50]	[55 -49]	[55 -48]	[55 -47]	[55 -46]	[55 -51]	[54 -46]
    ]
      [
        set pcolor green - 2
        set land-cover "PA"
        set protection-status "PA"
        ask neighbors [if pcolor = green [
          set pcolor green - 1
          set land-cover "PA-buffer"
          set protection-status "buffer"
          ]
        ]
    ]
  ]
end


;;--------------------------------------------------------------------------------------CREATING SMALLHOLDERS----------------------------------------------------------------------------------
to setup-smallholders
  create-smallholders #-smallholders [
    move-to one-of patches with [pcolor = black + 4]
    set color gray + 3
    set shape "person farmer"
    set size 2

    set conventional-land-ownership 0
    set certified-land-ownership 0
    set wealth 5
    set ticks-until-action 0
    set start-timer (0 + random 3)
  ]
end

;;--------------------------------------------------------------------------CREATING COMPANY CAGTEGORIES (PIONEERS - MAINSTREAMERS - LAGGARDS)-------------------------------------------------
to setup-pioneers
  create-companies #-pioneers [
    move-to one-of patches with [pcolor = black + 4]
    set color yellow
    set shape "truck"
    set size 2
    set conventional-land-ownership 0
    set certified-land-ownership 0
    set wealth 50
    set company-tier "pioneer"
    set start-timer (4 + random 8)
  ]
end

to setup-mainstreamers
  create-companies #-mainstreamers [
    move-to one-of patches with [pcolor = black + 4]
    set color black
    set shape "truck"
    set size 2
    set conventional-land-ownership 0
    set certified-land-ownership 0
    set wealth 50
    set company-tier "mainstreamer"
    set start-timer (4 + random 8)
  ]
end

to setup-laggards
  create-companies #-laggards [
    move-to one-of patches with [pcolor = black + 4]
    set color red - 1
    set shape "truck"
    set size 2
    set conventional-land-ownership 0
    set certified-land-ownership 0
    set wealth 50
    set company-tier "laggard"
    set start-timer (4 + random 8)
  ]
end

;;--------------------------------------------------------------------------------------CREATING THE GOVERNMENT--------------------------------------------------------------------------------
to setup-governments
  create-governments 1 [
    setxy max-pxcor - 1 max-pycor - 1
    set color yellow
    set shape "house"
    set size 3
    set government-ticks-until-action 3
    set NGO-pressure-contingent 0
    set company-pressure-contingent 0
    set pressure-contingent 10                      ;; FEB-10: I randomly picked this value, probably should calibrate it to a value that runs smoothly, or at least justify why I picked 10
  ]
  set smallholder_stagnation 0
  set company_stagnation 0
end

;;--------------------------------------------------------------------------------------CREATING NGOs------------------------------------------------------------------------------------------
to setup-NGOs
  create-NGOs 1 [
    setxy min-pxcor + 1 max-pycor - 1
    set color yellow
    set shape "butterfly"
    set size 3
    face patch -34 35
  ]
end


;;=============================================================================================================================================================================================
;;===============================================================P R O C E D U R E S  &  A C T I O N S=========================================================================================
;;=============================================================================================================================================================================================


;;===========================================================================GO PROCEDURE=====================================================================================================
to go
  determine-deforestation-rate
  calculate-transportation-costs
  calculate-land-rents
  set-land-ownership
  ask smallholders [update-wealth-smallholder]
  ask companies [update-wealth-company]
  check-smallholder-status
  check-company-status
  check-fallow
  update-aichi-trajectory_update-PA-appropriateness
  trigger-ngo-pressure
  trigger-company-pressure
  respond-to-pressure
  reforest
  monitor-landscape-homogeneity
  tick
end

;;///////////////////////////////////////////////////P R O C E D U R E S   C A L L E D   B Y   T H E   G O - C O M M A N D\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
;;--------------------------------------------------------DETERMINING DEFORESTATION RATE, SETTING LAND-OWNERSHIP, CALCULATING TRANSPORTATION-COSTS----------------------------------

to determine-deforestation-rate
  set forest-extent count patches with [land-cover = "forest" or land-cover = "PA" or land-cover = "PA-buffer" or land-cover = "PA-set-aside" or land-cover = "river-buffer" or land-cover = "smallholder-forest"]
  set forest-extent-tracker fput forest-extent forest-extent-tracker

  if ticks >= 4 and ticks mod 4 = 0  [
    set annual-deforestation (ln((forest-extent + 1) / (item 3 forest-extent-tracker + 1))) * -10
    ;; for the purpose of the GSA, I could comment-out the line above and replace with set annual-deforestation 1, because it's just a reporter, nothing that actually impact the model run --> WRONG, it does impact
    ;; [...] the model, namely for the NGO-pressure trigger, so quite big actually.
  ]


end

to calculate-transportation-costs
  ask patches with [land-cover != "urban" and land-cover != "NGO" and land-cover != "government" and land-cover != "river" and land-cover != "company-crop"] [
    set transportation-cost 0.1 * (((log (distance-to-center + 10) 10) / (log (ticks + 10) 10)))
  ]
end

to set-land-ownership
  ask smallholders [
    set owner-ID who
    set conventional-land-ownership count patches with [owner = owner-ID and land-cover = "smallholder-crop"]
    set certified-land-ownership count patches with [owner = owner-ID and land-cover = "smallholder-crop-certified"]
    set intensified-land-ownership count patches with [owner = owner-ID and land-cover = "smallholder-crop-intensified"]
  ]

 ask companies [
    set owner-ID who
    set conventional-land-ownership count patches with [owner = owner-ID and land-cover != "PA-set-aside" and certified? = "no" and intensified? = "no"]
    set certified-land-ownership count patches with [owner = owner-ID and certified? = "yes"]
    set intensified-land-ownership count patches with [owner = owner-ID and intensified? = "yes"]

  ]
end

to update-wealth-smallholder
  let smallholder-income ((conventional-land-ownership * yield-smallholder) + (certified-land-ownership * yield-smallholder * price-premium) + (intensified-land-ownership * yield-smallholder * yield-premium))
  let smallholder-expenses ((conventional-land-ownership * land-costs-smallholder) + (certified-land-ownership * land-costs-smallholder * maintenance-premium) + (intensified-land-ownership * land-costs-smallholder * maintenance-premium-intensification))

  set wealth (wealth + smallholder-income - smallholder-expenses)
end

to update-wealth-company
  let company-income ((conventional-land-ownership * yield-company) + (certified-land-ownership * yield-company * price-premium))
  let company-expenses ((conventional-land-ownership * land-costs-company) + (certified-land-ownership * land-costs-company * maintenance-premium))

  if wealth >= 0 [set wealth (wealth + company-income - company-expenses)]

end

;;-----------------------------------------------CHECKING WEALTH & START-COUNTER OF SH & COMPANIES, AND FALLOW-PATCHES---------------------------------------------------------

to check-smallholder-status
  ask smallholders [
    set owner-ID who

    if start-timer > 0 [
      set start-timer start-timer - 1]
    if wealth < 0 [
      set color red
      set shape "cow skull"
      ask patches with [owner = owner-ID] [
        set land-cover "abandoned"
        set owner "abandoned"
        set abandonment-timer 20
        set pcolor grey + 1
      ]
    ]
    if start-timer < 1 and wealth >= 0 [
      ifelse ticks-until-action < 1 and (conventional-land-ownership + certified-land-ownership + intensified-land-ownership) < 3 [
        smallholders-choose-activity]
      [set ticks-until-action ticks-until-action - 1]
    ]
  ]
end

to check-company-status
  ask companies [
    set owner-ID who
    if start-timer > 0 [
      set start-timer start-timer - 1]
    if wealth < 0 [
      set color red
      set shape "cow skull"
      ask patches with [owner = owner-ID] [
        set land-cover "abandoned"
        set owner "abandoned"
        set abandonment-timer 20
        set pcolor grey + 1
      ]
    ]
  ]

  ask companies with [company-tier = "pioneer"] [
    if start-timer < 1 and wealth >= 0 [
      pioneer-choose-activity
    ]
  ]

  ask companies with [company-tier = "mainstreamer"] [
    if start-timer < 1 and wealth >= 0 [
      mainstreamer-choose-activity
    ]
  ]

  ask companies with [company-tier = "laggard"] [
    if start-timer < 1 and wealth >= 0 [
      laggard-choose-activity
          ]
    ]
end

to check-fallow
  ask patches with [owned-by = "SH"][

    if land-cover = "smallholder-crop" [
      if fallow-timer < 20 [
        set land-cover "fallow"
        set pcolor brown + 2
        set plabel "F"
      ]
    ]

    if land-cover = "fallow" [
      if fallow-timer < 1 [
        set land-cover "smallholder-forest"
        set pcolor green
        set plabel ""
      ]
    ]

    if fallow-timer > 0 [
      set fallow-timer fallow-timer - 1
    ]
  ]
end

;;=====================================================================GOVERNMENT ENFORCEMENT & NGO PRESSURE===================================================================================
;-------------------------------------------------------------------------government enforcement loop------------------------------------------------------------------------------------------

;;---------------------------------------triggering NGOs to pressure government to increase tax / cost of land maintenance---------------------------------------------------------------------
to trigger-ngo-pressure
  if ticks mod 2 = 0 [
    ask governments [
    ifelse (annual-deforestation * deforestation-detection-level) > NGO-reporting-threshold [       ;; Deforestation-detection-level is a user-input in the GUI, intended to mimic ...
                                                                                                    ;; ... that deforestation does not always get reported immediately
      set NGO-pressure-contingent NGO-pressure-contingent + 1                                       ;; 11-MAY-21: added for potential new pressure system
      set color orange                                                                              ;; Increases the pressure on governments by + 1 & flash the agent orange
      set NGO-transactions NGO-transactions + 1
      set government-transactions government-transactions + 1
    ]
    [set color yellow]
  ]

    ask ngos [
      ifelse annual-deforestation * deforestation-detection-level > NGO-reporting-threshold [         ;; included this procedure so the NGO agent also flashes orange when their ...
        set color orange                                                                              ;; ... threshold is triggered.
      ]
      [set color yellow]
  ]
  ]
end

;;----------------------------------------triggering companies to pressure government to decrease costs----------------------------------------------------------------------------------------
to trigger-company-pressure
  if ticks mod 2 = 0 [
    ask governments [
    ifelse land-costs-company > (initial-land-costs-company * (1 + company-lobbying-threshold)) [       ;; When land-costs are X% higher than initial value of land-costs, then companies apply pressure to GOVERNMENT
      set company-pressure-contingent company-pressure-contingent + 1
      set color blue
      set company-transactions company-transactions + 1
      set government-transactions government-transactions + 1
    ]
    [set color yellow]
  ]
  ]
end

;------------------------------------------GOVERNMENT responds to pressure (from NGOs and companies)-------------------------------------------------------------------------------------------

to respond-to-pressure
  ask governments [
    ifelse government-ticks-until-action > 0 [
      set government-ticks-until-action government-ticks-until-action - 1
    ]
    [set government-ticks-until-action 3

      ;[1] ONLY NGO-pressure is above the threshold AND the Aichi-targets are on track
      if NGO-pressure-contingent >= (5 - government-pro-environment) and aichi-on-track? = "yes" and company-pressure-contingent < 5[
        set NGO-pressure-contingent 0
        set government-transactions government-transactions + 1
        set land-costs-company (land-costs-company * 1.055)
      ]

      ;[2] ONLY NGO-pressure is above the threshold AND the Aichi-targets are --NOT-- on track
      if NGO-pressure-contingent >= (5 - government-pro-environment) and aichi-on-track? = "no" and company-pressure-contingent < 5 [
        set NGO-pressure-contingent 0
        set government-transactions government-transactions + 1
        let PA-center-patch max-one-of patches [PA-appropriateness]
        move-to PA-center-patch
        ask patches in-radius 11.5 with [land-cover = "forest" or land-cover = "fallow" or land-cover = "smallholder-crop" or land-cover = "pioneer-crop" or land-cover = "mainstreamer-crop" or land-cover = "laggard-crop" or land-cover = "smallholder-forest"] [
          set PA-appropriateness 0
          set pcolor green - 2
          set land-cover "PA"
          set protection-status "PA"
          ask neighbors [if pcolor = green [
            set pcolor green - 1
            set land-cover "PA-buffer"
            set protection-status "buffer"
            set PA-appropriateness 0]
          ]
        ]

        if any? patches in-radius 11.5 with [owned-by = "company"] [
          set company-pressure-contingent 3
        ]

        if any? patches in-radius 11.5 with [owned-by = "SH"] [
          set NGO-pressure-contingent 3
        ]
        move-to patch 61 61
  ]

      ;[3] ONLY corporate pressure is above the threshold
      if company-pressure-contingent >= (5 - government-pro-business) and NGO-pressure-contingent < 5 [
        set company-pressure-contingent 0
        set government-transactions government-transactions + 1
        set land-costs-company (land-costs-company * 0.95)
      ]

      ;[4] BOTH contingents are above threshold
      if company-pressure-contingent >= (5 - government-pro-business) and NGO-pressure-contingent >= (5 - government-pro-environment) [

        ;;[4.a] NGO-pressure higher AND on track for Aichi-targets
        if NGO-pressure-contingent > company-pressure-contingent and aichi-on-track? = "yes"[
          set NGO-pressure-contingent 0
          set company-pressure-contingent (company-pressure-contingent / 2)
          set government-transactions government-transactions + 1
          set land-costs-company (land-costs-company * 1.055)
         ]

        ;;[4.b] NGO-pressure higher AND --NOT-- track for Aichi-targets
        if NGO-pressure-contingent > company-pressure-contingent and aichi-on-track? = "no" [
          set NGO-pressure-contingent 0
          set company-pressure-contingent (company-pressure-contingent / 2)
          set government-transactions government-transactions + 1
          let PA-center-patch max-one-of patches [PA-appropriateness]
          move-to PA-center-patch
          ask patches in-radius 11.5 with [land-cover = "forest" or land-cover = "fallow" or land-cover = "smallholder-crop" or land-cover = "pioneer-crop" or land-cover = "mainstreamer-crop" or land-cover = "laggard-crop" or land-cover = "smallholder-forest"] [
            set PA-appropriateness 0
            set pcolor green - 2
            set land-cover "PA"
            set protection-status "PA"

            ask neighbors [
              if pcolor = green [
                set pcolor green - 1
                set land-cover "PA-buffer"
                set protection-status "buffer"
                set PA-appropriateness 0
              ]
            ]
          ]

        if any? patches in-radius 11.5 with [owned-by = "company"] [
          set company-pressure-contingent (company-pressure-contingent + 2.5)
        ]

        if any? patches in-radius 11.5 with [owned-by = "SH"] [
          set NGO-pressure-contingent (NGO-pressure-contingent + 2.5)
        ]
        move-to patch 61 61
        ]

        ;;[4.c] Company-pressure higher
        if company-pressure-contingent > NGO-pressure-contingent [
          set company-pressure-contingent 0
          set NGO-pressure-contingent (NGO-pressure-contingent / 2)
          set government-transactions government-transactions + 1
          set land-costs-company (land-costs-company * 0.95)
      ]

        ;;[4.d] Company- and NGO-pressure equal and --NOT-- on track for Aichi-targets (in this case government chooses the pro-environmental option due to higher pressure, ie designating PAs)
        if company-pressure-contingent = NGO-pressure-contingent and aichi-on-track? = "no" [
          set NGO-pressure-contingent 0
          set company-pressure-contingent (company-pressure-contingent / 2)
          set government-transactions government-transactions + 1
          let PA-center-patch max-one-of patches [PA-appropriateness]

          move-to PA-center-patch

          ask patches in-radius 11.5 with [land-cover = "forest" or land-cover = "fallow" or land-cover = "smallholder-crop" or land-cover = "pioneer-crop" or land-cover = "mainstreamer-crop" or land-cover = "laggard-crop" or land-cover = "smallholder-forest"] [
            set PA-appropriateness 0
            set pcolor green - 2
            set land-cover "PA"
            set protection-status "PA"

            ask neighbors [
              if pcolor = green [
                set pcolor green - 1
                set land-cover "PA-buffer"
                set protection-status "buffer"
                set PA-appropriateness 0
              ]
            ]
          ]

        if any? patches in-radius 11.5 with [owned-by = "company"] [
          set company-pressure-contingent (company-pressure-contingent + 2.5)
        ]

        if any? patches in-radius 11.5 with [owned-by = "SH"] [
          set NGO-pressure-contingent (NGO-pressure-contingent + 2.5)
        ]
        move-to patch 61 61
        ]

        ;;[4.e] Company- and NGO-pressure equal
        if company-pressure-contingent = NGO-pressure-contingent and aichi-on-track? = "yes" [
          set company-pressure-contingent 0
          set NGO-pressure-contingent (NGO-pressure-contingent / 2)
          set government-transactions government-transactions + 1
          set land-costs-company (land-costs-company * 0.95)
        ]
      ]
      ;;[5] both company-pressure and NGO-pressure are below 5 BUT government is "proactive"
      if company-pressure-contingent < 5 and NGO-pressure-contingent < 5 and government-proactive > 0.5 [
        let current-PA count patches with [protection-status = "PA" or protection-status = "set-aside" or protection-status = "buffer" or protection-status = "riparian"]
        let conservation-goal-absolute (conservation-goal / 100) * 15127                    ;; conservation-goal-absolute is the absolute value in patches of the conservation-goal parameter, 15,127 is the total number of non-anthropogenic patches in the initial model world
        let conservation-goal-schedule (conservation-goal-absolute / 80) * (ticks - 80)     ;; conservation-goal-absolute divided by 80 gives us the value of protected area per tick of policy-period (which is 80 ticks)
                                                                                            ;; conservation-goal-schedule tracks how much protected area needs to be designated at each tick to be on track to meet the conservation-goal at tick 160
        if ticks >= 100 and ticks < 130 and current-PA < conservation-goal-schedule [
          set NGO-pressure-contingent (NGO-pressure-contingent / 2)
          set government-transactions government-transactions + 1
          let PA-center-patch max-one-of patches [PA-appropriateness]

          move-to PA-center-patch

          ask patches in-radius 8.2 with [land-cover = "forest" or land-cover = "fallow" or land-cover = "smallholder-crop" or land-cover = "pioneer-crop" or land-cover = "mainstreamer-crop" or land-cover = "laggard-crop" or land-cover = "smallholder-forest"] [
            set PA-appropriateness 0
            set pcolor green - 2
            set land-cover "PA"
            set protection-status "PA"

            ask neighbors [
              if pcolor = green [
                set pcolor green - 1
                set land-cover "PA-buffer"
                set protection-status "buffer"
                set PA-appropriateness 0
              ]
            ]
          ]

        if any? patches in-radius 8.2 with [owned-by = "company"] [
          set company-pressure-contingent (company-pressure-contingent + 2.5)
        ]

        if any? patches in-radius 8.2 with [owned-by = "SH"] [
          set NGO-pressure-contingent (NGO-pressure-contingent + 2.5)
        ]
        move-to patch 61 61
        ]

        if ticks > 130 and current-PA < conservation-goal-schedule [
          set NGO-pressure-contingent 0
          set company-pressure-contingent (company-pressure-contingent / 2)
          set government-transactions government-transactions + 1
          let PA-center-patch max-one-of patches [PA-appropriateness]

          move-to PA-center-patch

          ask patches in-radius 11.5 with [land-cover = "forest" or land-cover = "fallow" or land-cover = "smallholder-crop" or land-cover = "pioneer-crop" or land-cover = "mainstreamer-crop" or land-cover = "laggard-crop" or land-cover = "smallholder-forest"] [
            set PA-appropriateness 0
            set pcolor green - 2
            set land-cover "PA"
            set protection-status "PA"

            ask neighbors [
              if pcolor = green [
                set pcolor green - 1
                set land-cover "PA-buffer"
                set protection-status "buffer"
                set PA-appropriateness 0
              ]
            ]
          ]

          if any? patches in-radius 11.5 with [owned-by = "company"] [
            set company-pressure-contingent (company-pressure-contingent + 2.5)
          ]

          if any? patches in-radius 11.5 with [owned-by = "SH"] [
            set NGO-pressure-contingent (company-pressure-contingent + 2.5)
          ]
          move-to patch 61 61
      ]
    ]
    ]
  ]
end



;;///////////////////////////////////////////////////P R O C E D U R E S    N O T   C A L L E D   B Y   T H E   G O - C O M M A N D\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

;;=====================================================================SMALLHOLDERS CHOOSING ACTIVITY===============================================================================================
;;-------------------Here, SMALLHOLDERS choose between between different activities pertaining to land-use, e.g. conversion, certification, intensification, or idling----------------------

;;-------------------------------CALLED BY: check-smallholder-status-------------------------------------------------------------------------------------------------------------------------
to smallholders-choose-activity

  calculate-land-rents
  update-certification-rent
  update-intensification-rent

  let max-rent max (list smallholders_converting_land smallholders_idle smallholders_getting_certified smallholders_intensify)
  let action-list []
  if max-rent = smallholders_converting_land [set action-list fput "smallholders_converting_land" action-list]
  if max-rent = smallholders_idle [set action-list fput "smallholders_idle" action-list]
  if max-rent = smallholders_getting_certified [set action-list fput "smallholders_getting_certified" action-list]
  if max-rent = smallholders_intensify [set action-list fput "smallholders_intensify" action-list]

  let best-action one-of action-list

  run (word "do-" best-action)

  set ticks-until-action action-delay-smallholder
end


;;---------------------------------smallholders converting land: to-report- and to-do- functions --> CALLED BY: smallholders-choose-activity---------------------------------------------------------------------------
to-report smallholders_converting_land ;;continue here with inetgrating abandoned land
  set owner-ID who
  ifelse any? patches in-radius 10 with [land-cover = "forest" or land-cover = "PA" or land-cover = "PA-buffer" or land-cover = "river-buffer" or land-cover = "abandoned" or (land-cover = "smallholder-forest" and owner = owner-ID)]
  [
    set money-patch-smallholder max-one-of patches in-radius 10 with [land-cover = "forest" or land-cover = "PA" or land-cover = "PA-buffer" or land-cover = "river-buffer" or land-cover = "abandoned" or (land-cover = "smallholder-forest" and owner = owner-ID)] [land-rent-SH]
    report [land-rent-SH] of money-patch-smallholder
  ]
  [report -10]
end

to do-smallholders_converting_land
    move-to money-patch-smallholder

;; --- determining if fines need to be applied, and, if so, what degree of fine ---
  if land-cover = "PA" or land-cover = "river-buffer" or land-cover = "designated-PA" and random-float 1 < encroachment-detection-rate [
    set wealth wealth - fine-for-tier-1-encroachment
    set smallholder-transactions smallholder-transactions + 1
    set government-transactions government-transactions + 1
    set protection-status "encroached-smallholder"
    ]

  if land-cover = "PA-buffer" and random-float 1 < encroachment-detection-rate [
    set wealth wealth - fine-for-tier-2-encroachment
    set smallholder-transactions smallholder-transactions + 1
    set government-transactions government-transactions + 1
    set protection-status "encroached-smallholder"
    ]

  if land-cover = "forest" and random-float 1 < encroachment-detection-rate [
    set wealth wealth - fine-for-tier-3-encroachment
    set smallholder-transactions smallholder-transactions + 1
    set government-transactions government-transactions + 1
    set protection-status "encroached-smallholder"
  ]

 ;; --- converting the patch to a smallholder crop patch ---
  set owner-ID who
  set pcolor brown - 1
  set land-cover "smallholder-crop"
  set owned-by "SH"
  set owner who
  set conversion-time ticks
  set fallow-timer 30
end

;;---------------------------------smallholders staying idle: to-report- and to-do- functions --> CALLED BY: smallholders-choose-activity---------------------------------------------------------------------------
to-report smallholders_idle
  report 0
end

to do-smallholders_idle
  set owner-ID who

  ifelse any? patches in-radius 20 with [owner = owner-ID] [
    move-to max-one-of patches with [owner = owner-ID] [distance myself]
  ]
  []

  set smallholder_stagnation smallholder_stagnation + 1
end

;;---------------------------------smallholders getting certified: to-report- and to-do- functions --> CALLED BY: smallholders-choose-activity---------------------------------------------------------------------------
to-report smallholders_getting_certified
  set owner-ID who
  ifelse ticks > 24 and any? patches in-radius 10 with [certified? = "no" and land-cover = "smallholder-crop" and owner = owner-ID and conversion-time < 80] [
    set certification-patch-smallholder max-one-of patches in-radius 10 with [certified? = "no" and land-cover = "smallholder-crop" and owner = owner-ID and conversion-time < 80] [certification-rent-smallholder]
    report [certification-rent-smallholder] of certification-patch-smallholder
  ]
  [report -10]
end

to do-smallholders_getting_certified
    move-to certification-patch-smallholder
    set pcolor brown + 1
    set certified? "yes"
    set land-cover "smallholder-crop-certified"
    set plabel ""
end

;;---------------------------------smallholders intensify crop patches: to-report- and to-do- functions  --> CALLED BY: smallholders-choose-activity---------------------------------------------------------------------------
to-report smallholders_intensify
  set owner-ID who
  ifelse any? patches in-radius 10 with [owner = owner-ID and land-cover = "smallholder-crop"] [
    set intensification-patch-smallholder max-one-of patches in-radius 10 with [owner = owner-ID and land-cover = "smallholder-crop"] [intensification-rent-smallholder]
    report [intensification-rent-smallholder] of intensification-patch-smallholder
  ]
  [report -10]
end

to do-smallholders_intensify
    move-to intensification-patch-smallholder
    set pcolor brown - 2
    set land-cover "smallholder-crop-intensified"
end

;;============================================COMPANIES TO-REPORT & TO-DO FUNCTIONS - CALLED BY: SMALLHOLDERS-CHOOSE-ACTIVITY======================================================
;;-------------------Here, PIONEERS choose between between different activities pertaining to land-use, e.g. conversion, certification, intensification, or idling----------------------

to pioneer-choose-activity

  calculate-land-rents
  update-certification-rent
  update-intensification-rent
  update-set-aside-rent

  let max-rent max (list pioneer_convert companies_idle pioneer_certify pioneer_set_aside pioneer_intensify)
  let action-list []
  if max-rent = pioneer_convert [set action-list fput "pioneer_convert" action-list]
  if max-rent = companies_idle [set action-list fput "companies_idle" action-list]
  if max-rent = pioneer_certify [set action-list fput "pioneer_certify" action-list]
  if max-rent = pioneer_set_aside [set action-list fput "pioneer_set_aside" action-list]
  if max-rent = pioneer_intensify [set action-list fput "pioneer_intensify" action-list]

  let best-action one-of action-list

  run (word "do-" best-action)

  set start-timer action-delay-company
end

;;---------------------------------PIONEERS converting land: to-report- and to-do- functions --> CALLED BY: pioneer-choose-activity---------------------------------------------------------------------------
to-report pioneer_convert
  ifelse any? patches with [land-cover = "forest" or land-cover = "smallholder-forest" or land-cover = "PA-buffer" or land-cover = "PA" or land-cover = "abandoned"] [
    set money-patch-pioneer max-one-of patches with [land-cover = "forest" or land-cover = "smallholder-forest" or land-cover = "PA-buffer" or land-cover = "PA" or land-cover = "abandoned"] [land-rent-P]
    report [land-rent-P] of money-patch-pioneer
  ]
  [
    report -10
  ]
end

to do-pioneer_convert
    move-to money-patch-pioneer

  ;;---------------Determining encroachment, fines, & transactions-------------------------------
  if random-float 1 < encroachment-detection-rate [
    set wealth (wealth - ((count patches in-radius 3.8 with [land-cover = "river-buffer" or land-cover = "PA" or land-cover = "fallow"]) * fine-for-tier-1-encroachment))
    set wealth (wealth - ((count patches in-radius 3.8 with [land-cover = "PA-buffer" or land-cover = "smallholder-forest"]) * fine-for-tier-2-encroachment))
    set wealth (wealth - ((count patches in-radius 3.8 with [land-cover = "forest"]) * fine-for-tier-3-encroachment))
    set company-transactions company-transactions + 1
    set government-transactions government-transactions + 1
  ]

  ;;---------------Converting patches in-radius to cropland; the procedures are split by land-cover type to record encroachment of different types for statistics-------------------------
  set owner-ID who
  ask patches in-radius 3.8 with [land-cover = "forest" or land-cover = "abandoned"] [
    set pcolor brown
    set land-cover "pioneer-crop"
    set owner owner-ID
    set owned-by "company"
    set conversion-time ticks
    set certified? "no"
  ]
  ask patches in-radius 3.8 with [land-cover = "river-buffer" or land-cover = "PA" or land-cover = "fallow" or land-cover = "PA-buffer" or land-cover = "smallholder-forest"] [
    set pcolor brown
    set land-cover "pioneer-crop"
    set owner owner-ID
    set conversion-time ticks
    set owned-by "company"
    set certified? "no"
    set protection-status "encroached-pioneer"
  ]
end

;;---------------------------------PIONEERS certifying patches of crop land: to-report- and to-do- functions --> CALLED BY: pioneer-choose-activity------------------------------------------------------------
to-report pioneer_certify
  set owner-ID who
  ifelse ticks > 24 and any? patches with [land-cover = "pioneer-crop" and conversion-time < 80 and owner = owner-ID] [
    set certification-patch-pioneer max-one-of patches with [land-cover = "pioneer-crop" and conversion-time < 80 and owner = owner-ID] [certification-rent]
    report [certification-rent] of certification-patch-pioneer
  ]
  [report -10]
end

to do-pioneer_certify
  move-to certification-patch-pioneer
  ask patches in-radius 3.8 with [land-cover = "pioneer-crop"] [
    set pcolor brown + 1
    set certified? "yes"
    set land-cover "pioneer-certified-crop"
  ]
end

;;---------------------------------PIONEERS setting aside patches for conservation and converting forest to crop: to-report- and to-do- functions --> CALLED BY: pioneer-choose-activity------------------------
to-report pioneer_set_aside
  ifelse ticks > 80 and any? patches with [land-cover = "forest" or land-cover = "abandoned"] [
    set pioneer-set-aside-patch max-one-of patches with [land-cover = "forest" or land-cover = "abandoned"] [set-aside-rent]
    report [set-aside-rent] of pioneer-set-aside-patch
  ]
  [report -10]
end

to do-pioneer_set_aside
  set owner-ID who
  move-to pioneer-set-aside-patch

  ask patches in-radius 4.5 with [land-cover = "forest" or land-cover = "abandoned"] [
    set pcolor 53
    set land-cover "PA-set-aside"
    set plabel "P"
    set owner owner-ID
    set protection-status "set-aside"
  ]

  let set-aside-patches count patches in-radius 4.5 with [land-cover = "PA-set-aside"]
  ask n-of (set-aside-patches * 0.6522) patches in-radius 4.5 with [land-cover = "PA-set-aside"] [
    set pcolor brown + 1
    set certified? "yes"
    set land-cover "pioneer-certified-set-aside-crop"
    set owner owner-ID
    set protection-status "no"
  ]
end


;;---------------------------------PIONEERS intensifying patches of crop land: to-report- and to-do- functions --> CALLED BY: pioneer-choose-activity------------------------------------------------------------
to-report pioneer_intensify
  set owner-ID who
  ifelse any? patches with [land-cover = "pioneer-crop" and certified? = "no" and owner = owner-ID] [
    set intensification-patch-pioneer max-one-of patches with [land-cover = "pioneer-crop" and certified? = "no" and owner = owner-ID] [intensification-rent]
    report [intensification-rent] of intensification-patch-pioneer
  ]
  [report -10]
end

to do-pioneer_intensify
  move-to intensification-patch-pioneer
  ask patches in-radius 3.8 with [land-cover = "pioneer-crop"] [
    set pcolor brown - 1
    set land-cover "pioneer-intensified-crop"
    set intensified? "yes"
  ]
end


;;-------------------Here, MAINSTREAMERS choose between between different activities pertaining to land-use, e.g. conversion, certification, intensification, or idling----------------------
to mainstreamer-choose-activity

  calculate-land-rents
  update-certification-rent
  update-intensification-rent

  let max-rent max (list mainstreamer_convert companies_idle mainstreamer_certify mainstreamer_intensify)
  let action-list []
  if max-rent = mainstreamer_convert [set action-list fput "mainstreamer_convert" action-list]
  if max-rent = companies_idle [set action-list fput "companies_idle" action-list]
  if max-rent = mainstreamer_certify [set action-list fput "mainstreamer_certify" action-list]
  if max-rent = mainstreamer_intensify [set action-list fput "mainstreamer_intensify" action-list]

  let best-action one-of action-list

  run (word "do-" best-action)

  set start-timer action-delay-company
end

;;---------------------------------MAINSTREAMERS converting land: to-report- and to-do- functions --> CALLED BY: mainstreamer-choose-activity---------------------------------------------------------------------------
to-report mainstreamer_convert
  ifelse any? patches with [land-cover = "forest" or land-cover = "smallholder-forest" or land-cover = "fallow" or land-cover = "PA-buffer" or land-cover = "PA" or land-cover = "abandoned" or land-cover = "river-buffer"] [
    set money-patch-mainstreamer max-one-of patches with [land-cover = "forest" or land-cover = "smallholder-forest" or land-cover = "fallow" or land-cover = "PA-buffer" or land-cover = "PA" or land-cover = "abandoned" or land-cover = "river-buffer"] [land-rent-M]
    report [land-rent-M] of money-patch-mainstreamer
  ]
  [
    report -10
  ]
end

to do-mainstreamer_convert
    move-to money-patch-mainstreamer

  ;; --- Determining encroachment, fines, & transactions ---
  if random-float 1 < encroachment-detection-rate [
    set wealth (wealth - ((count patches in-radius 3.8 with [land-cover = "river-buffer" or land-cover = "PA" or land-cover = "fallow"]) * fine-for-tier-1-encroachment))
    set wealth (wealth - ((count patches in-radius 3.8 with [land-cover = "PA-buffer" or land-cover = "smallholder-forest"]) * fine-for-tier-2-encroachment))
    set wealth (wealth - ((count patches in-radius 3.8 with [land-cover = "forest"]) * fine-for-tier-3-encroachment))
    set company-transactions company-transactions + 1
    set government-transactions government-transactions + 1
  ]

;; --- Converting patches in-radius to cropland; the procedures are split by land-cover type to record encroachment of different types for statistics ---
  set owner-ID who
  ask patches in-radius 3.8 with [land-cover = "forest" or land-cover = "abandoned"] [
    set pcolor brown
    set land-cover "mainstreamer-crop"
    set owner owner-ID
    set owned-by "company"
    set conversion-time ticks
    set certified? "no"
    ]

  ask patches in-radius 3.8 with [land-cover = "river-buffer" or land-cover = "PA" or land-cover = "fallow" or land-cover = "PA-buffer" or land-cover = "smallholder-forest"] [
    set pcolor brown
    set land-cover "mainstreamer-crop"
    set owner owner-ID
    set conversion-time ticks
    set owned-by "company"
    set certified? "no"
    set protection-status "encroached-mainstreamer"
  ]
end


;;---------------------------------MAINSTREAMERS certifying crop land: to-report- and to-do- functions --> CALLED BY: mainstreamer-choose-activity---------------------------------------------------------------------------
to-report mainstreamer_certify
  set owner-ID who
  ifelse ticks > 24 and any? patches with [land-cover = "mainstreamer-crop" and conversion-time < 80 and owner = owner-ID] [
    set certification-patch-mainstreamer max-one-of patches with [land-cover = "mainstreamer-crop" and conversion-time < 80 and owner = owner-ID] [certification-rent]
    report [certification-rent] of certification-patch-mainstreamer
  ]
  [report -10]
end

to do-mainstreamer_certify
  move-to certification-patch-mainstreamer
  ask patches in-radius 3.8 with [land-cover = "mainstreamer-crop"] [
    set pcolor brown + 1
    set certified? "yes"
    set land-cover "mainstreamer-certified-crop"
  ]
end

;;---------------------------------MAINSTREAMERS intensifying crop land: to-report- and to-do- functions --> CALLED BY: mainstreamer-choose-activity---------------------------------------------------------------------------
to-report mainstreamer_intensify
  set owner-ID who
  ifelse any? patches with [land-cover = "mainstreamer-crop" and certified? = "no" and owner = owner-ID] [
    set intensification-patch-mainstreamer max-one-of patches with [land-cover = "mainstreamer-crop" and certified? = "no" and owner = owner-ID] [intensification-rent]
    report [intensification-rent] of intensification-patch-mainstreamer
  ]
  [report -10]
end

to do-mainstreamer_intensify
  move-to intensification-patch-mainstreamer
  ask patches in-radius 3.8 with [land-cover = "mainstreamer-crop"] [
    set pcolor brown - 1
    set land-cover "mainstreamer-intensified-crop"
    set intensified? "yes"
  ]
end


;;-------------------Here, LAGGARDS choose between between different activities pertaining to land-use, e.g. conversion, certification, intensification, or idling----------------------
to laggard-choose-activity

  calculate-land-rents
  update-certification-rent
  update-intensification-rent

  let max-rent max (list laggard_convert companies_idle laggard_intensify laggard_certify)
  let action-list []
  if max-rent = laggard_convert [set action-list fput "laggard_convert" action-list]
  if max-rent = companies_idle [set action-list fput "companies_idle" action-list]
  if max-rent = laggard_intensify [set action-list fput "laggard_intensify" action-list]
  if max-rent = laggard_certify [set action-list fput "laggard_certify" action-list]

  let best-action one-of action-list

  run (word "do-" best-action)

  set start-timer action-delay-company
end

;;---------------------------------LAGGARDS converting land: to-report- and to-do- functions --> CALLED BY: laggard-choose-activity---------------------------------------------------------------------------
to-report laggard_convert
  ifelse any? patches with [land-cover = "forest" or land-cover = "smallholder-forest" or land-cover = "fallow" or land-cover = "PA-buffer" or land-cover = "river-buffer" or land-cover = "PA" or land-cover = "smallholder-crop" or land-cover = "abandoned"] [
    set money-patch-laggard max-one-of patches with [land-cover = "forest" or land-cover = "smallholder-forest" or land-cover = "fallow" or land-cover = "PA-buffer" or land-cover = "river-buffer" or land-cover = "PA" or land-cover = "smallholder-crop" or land-cover = "abandoned"] [land-rent-L]
    report [land-rent-L] of money-patch-laggard
  ]
  [
    report -10
  ]
end

to do-laggard_convert
    move-to money-patch-laggard

;; --- Determining encroachment, fines, & transactions ---
  if random-float 1 < encroachment-detection-rate [
    set wealth (wealth - ((count patches in-radius 3.8 with [land-cover = "river-buffer" or land-cover = "PA" or land-cover = "fallow"]) * fine-for-tier-1-encroachment))
    set wealth (wealth - ((count patches in-radius 3.8 with [land-cover = "PA-buffer" or land-cover = "smallholder-forest"]) * fine-for-tier-2-encroachment))
    set wealth (wealth - ((count patches in-radius 3.8 with [land-cover = "forest"]) * fine-for-tier-3-encroachment))
    set company-transactions company-transactions + 1
    set government-transactions government-transactions + 1
  ]

;; --- Converting patches in-radius to cropland; the procedures are split by land-cover type to record encroachment of different types for statistics ---
  set owner-ID who

  ask patches in-radius 3.8 with [land-cover = "forest" or land-cover = "abandoned"] [
    set pcolor brown
    set land-cover "laggard-crop"
    set owner owner-ID
    set owned-by "company"
    set conversion-time ticks
  ]

  ask patches in-radius 3.8 with [land-cover = "smallholder-crop"] [      ;; converting illegal patches that are not penalized
    set pcolor brown
    set land-cover "laggard-crop"
    set owner owner-ID
    set owned-by "company"
    set conversion-time ticks
    set protection-status "grabbed"
  ]

  ask patches in-radius 3.8 with [land-cover = "river-buffer" or land-cover = "PA" or land-cover = "fallow" or land-cover = "PA-buffer" or land-cover = "smallholder-forest"] [
    set pcolor brown
    set land-cover "laggard-crop"
    set owner owner-ID
    set conversion-time ticks
    set owned-by "company"
    set certified? "no"
    set protection-status "encroached-laggard"
  ]
end

;;---------------------------------LAGGARDS certifying crop land: to-report- and to-do- functions --> CALLED BY: laggard-choose-activity---------------------------------------------------------------------------
to-report laggard_certify
  set owner-ID who
  ifelse ticks > 24 and any? patches with [land-cover = "laggard-crop" and conversion-time < 80 and owner = owner-ID] [
    set certification-patch-laggard max-one-of patches with [land-cover = "laggard-crop" and conversion-time < 80 and owner = owner-ID] [certification-rent]
    report [certification-rent] of certification-patch-laggard
  ]
  [report -10]
end

to do-laggard_certify
  move-to certification-patch-laggard
  ask patches in-radius 3.8 with [land-cover = "laggard-crop"] [
    set pcolor brown + 1
    set certified? "yes"
    set land-cover "laggard-certified-crop"
  ]
end

;;---------------------------------LAGGARDS intensifying crop land: to-report- and to-do- functions --> CALLED BY: laggard-choose-activity---------------------------------------------------------------------------
to-report laggard_intensify
  set owner-ID who
  ifelse any? patches with [land-cover = "laggard-crop" and certified? = "no" and owner = owner-ID] [
    set intensification-patch-laggard max-one-of patches with [land-cover = "laggard-crop" and certified? = "no" and owner = owner-ID] [intensification-rent]
    report [intensification-rent] of intensification-patch-laggard
  ]
  [report -10]
end

to do-laggard_intensify
  move-to intensification-patch-laggard
  ask patches in-radius 3.8 with [land-cover = "laggard-crop"] [
    set pcolor brown - 1
    set land-cover "laggard-intensified-crop"
    set intensified? "yes"
  ]
end

;;---------------------------------COMPANIES idling: to-report- and to-do- functions --> CALLED BY: pioneer & mainstreamer & laggard-choose-activity---------------------------------------------------------------------------
to-report companies_idle
  report 0                              ;; --- represents the value of an agent not engaging in any action (e.g., conversion, intensification, certification, or set-aside)
end

to do-companies_idle
  set company_stagnation company_stagnation + 1
  ask governments [
    set company-pressure-contingent (company-pressure-contingent + company-lobbying-when-idle)
  ]
end

;;///////////////////////////////////////////////////P R O C E D U R E S   C A L L E D   B Y   C H O O S E - A C T I V I T Y - C O M M A N D S\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
;;===============================================CALCULATING AND UPDATING RENTS, FOR (1) LAND, (2) CERTIFICATION, & (3) INTENSIFICATION & (4) SET-ASIDE=====================================================================
;;------------------------------------------------Following procedures are called by AGENTS-choose-activity procedures----------------------------------------------------------------------------
to calculate-land-rents
  ask patches with [land-cover != "urban" and land-cover != "NGO" and land-cover != "government" and land-cover != "river" and land-cover != "company-crop" and land-cover != "smallholder-crop"] [

    ;;-----------------STEP 1: Defining forest tiers; tier 1 = most problematic to encraoch, tier 3 = least problematic to encroach--------------------------------------------------------------------
    let tier-3-patches (count patches in-radius 3.8 with [land-cover = "forest"])
    let tier-2-patches (count patches in-radius 3.8 with [land-cover = "PA-buffer" or land-cover = "smallholder-forest"])
    let tier-1-patches (count patches in-radius 3.8 with [land-cover = "PA" or land-cover = "river-buffer" or land-cover = "fallow"])
    let abandoned-patches (count patches in-radius 3.8 with [land-cover = "abandoned"])

    ;;-----------------STEP 2: Determinig the risk associated with ENCROACHING forested patched, here, risk = likelihood * impact----------------------------------------------------------------------------------------------------------------------
    let tier-3-encroachment-risk (encroachment-detection-rate * fine-for-tier-3-encroachment)
    let tier-2-encroachment-risk (encroachment-detection-rate * fine-for-tier-2-encroachment)
    let tier-1-encroachment-risk (encroachment-detection-rate * fine-for-tier-1-encroachment)

   ;;------------------STEP 3: assigning a multiplier for determining the 'cost' of REPUTATION, based on which forest-tier is encroached, 1 = highest multiplier, 3 = lowest----
    let tier-3-multiplier 1                                  ;; --- these values are multiplied with the reputation-weight to demonstrate that the reputational damage is [...]
    let tier-2-multiplier 1.5                                ;; [...] higher when encroaching e.g., a protected area, compared to encroaching e.g., a regular forest
    let tier-1-multiplier 2

    ;;-----------------STEP 4: calculating the
    ifelse fine-for-tier-3-encroachment = 0 [                        ;; --- If there is no fine for this tier, it means that it is not illegal to convert and therefore [...]
      set reputational-cost-P-tier-3 0                               ;; [...] no reputational costs are associated with conversion.
      set reputational-cost-M-tier-3 0
      set reputational-cost-L-tier-3 0
    ]
    [
      set reputational-cost-P-tier-3 (P-reputation-weight * tier-3-multiplier * encroachment-detection-rate)  ;;OPTIONAL: I could multiply by the likelihood of encorachment detection
      set reputational-cost-M-tier-3 (M-reputation-weight * tier-3-multiplier * encroachment-detection-rate)
      set reputational-cost-L-tier-3 (L-reputation-weight * tier-3-multiplier * encroachment-detection-rate)

    ]

    ifelse fine-for-tier-2-encroachment = 0 [                        ;; 18-DEC: if there is no fine for this tier, it means that it is not illegal to convert and therefore
      set reputational-cost-P-tier-2 0                               ;; [...] no reputational costs are associated with conversion.
      set reputational-cost-M-tier-2 0
      set reputational-cost-L-tier-2 0
    ]
    [

      set reputational-cost-P-tier-2 (P-reputation-weight * tier-2-multiplier * encroachment-detection-rate)
      set reputational-cost-M-tier-2 (M-reputation-weight * tier-2-multiplier * encroachment-detection-rate)
      set reputational-cost-L-tier-2 (L-reputation-weight * tier-2-multiplier * encroachment-detection-rate)
    ]

    ifelse fine-for-tier-1-encroachment = 0 [
      set reputational-cost-P-tier-1 0
      set reputational-cost-M-tier-1 0
      set reputational-cost-L-tier-1 0
    ]
    [

      set reputational-cost-P-tier-1 (P-reputation-weight * tier-1-multiplier * encroachment-detection-rate)
      set reputational-cost-M-tier-1 (M-reputation-weight * tier-1-multiplier * encroachment-detection-rate)
      set reputational-cost-L-tier-1 (L-reputation-weight * tier-1-multiplier * encroachment-detection-rate)

    ]


    set land-rent-P (
      (tier-1-patches * (((yield-company - land-costs-company - transportation-cost - reputational-cost-P-tier-1) / 0.05) - conversion-costs-company - tier-1-encroachment-risk)) +
      (tier-2-patches * (((yield-company - land-costs-company - transportation-cost - reputational-cost-P-tier-2) / 0.05) - conversion-costs-company - tier-2-encroachment-risk)) +
      (tier-3-patches * (((yield-company - land-costs-company - transportation-cost - reputational-cost-P-tier-3) / 0.05) - conversion-costs-company - tier-3-encroachment-risk)) +
      (abandoned-patches * ((yield-company - land-costs-company - transportation-cost) / 0.05) - conversion-costs-company))

    set land-rent-M (
      (tier-1-patches * (((yield-company - land-costs-company - transportation-cost - reputational-cost-M-tier-1) / 0.05) - conversion-costs-company - tier-1-encroachment-risk)) +
      (tier-2-patches * (((yield-company - land-costs-company - transportation-cost - reputational-cost-M-tier-2) / 0.05) - conversion-costs-company - tier-2-encroachment-risk)) +
      (tier-3-patches * (((yield-company - land-costs-company - transportation-cost - reputational-cost-M-tier-3) / 0.05) - conversion-costs-company - tier-3-encroachment-risk) +
      (abandoned-patches * ((yield-company - land-costs-company - transportation-cost) / 0.05) - conversion-costs-company))
    )

    set land-rent-L (
      (tier-1-patches * (((yield-company - land-costs-company - transportation-cost - reputational-cost-L-tier-1) / 0.05) - conversion-costs-company - tier-1-encroachment-risk)) +
      (tier-2-patches * (((yield-company - land-costs-company - transportation-cost - reputational-cost-L-tier-2) / 0.05) - conversion-costs-company - tier-2-encroachment-risk)) +
      (tier-3-patches * (((yield-company - land-costs-company - transportation-cost - reputational-cost-L-tier-3) / 0.05) - conversion-costs-company - tier-3-encroachment-risk) +
      (abandoned-patches * ((yield-company - land-costs-company - transportation-cost) / 0.05) - conversion-costs-company))
    )
  ]

  ;;-----------------------calculating smallholder land rents------------------------

  ;ask patches with [land-cover != "urban" and land-cover != "NGO" and land-cover != "government" and land-cover != "river" and land-cover != "company-crop" and land-cover != "smallholder-crop"]

  let tier-1-encroachment-risk (fine-for-tier-1-encroachment * encroachment-detection-rate)
  let tier-2-encroachment-risk (fine-for-tier-2-encroachment * encroachment-detection-rate)
  let tier-3-encroachment-risk (fine-for-tier-3-encroachment * encroachment-detection-rate)

  ask patches with [land-cover = "forest" or land-cover = "smallholder-forest" or land-cover = "abandoned"] [
    set land-rent-SH (((yield-smallholder - land-costs-smallholder - transportation-cost) / 0.05) - conversion-costs-smallholder - tier-3-encroachment-risk)
  ]

  ask patches with [land-cover = "PA-buffer"] [
    set land-rent-SH (((yield-smallholder - land-costs-smallholder - transportation-cost) / 0.05) - conversion-costs-smallholder - tier-2-encroachment-risk)
  ]

  ask patches with [land-cover = "PA" or land-cover = "river-buffer"] [
    set land-rent-SH (((yield-smallholder - land-costs-smallholder - transportation-cost) / 0.05) - conversion-costs-smallholder - tier-1-encroachment-risk)
  ]
end

to update-certification-rent
  ask patches with [land-cover = "pioneer-crop"] [
    let available_patches_P count patches in-radius 3.8 with [land-cover = "pioneer-crop"]
    set certification-rent (available_patches_P * (((yield-company * price-premium + P-reputation-weight - land-costs-company * maintenance-premium - transportation-cost) / 0.05) - certification-cost-company))
      ]

  ask patches with [land-cover = "mainstreamer-crop"] [
    let available_patches_M count patches in-radius 3.8 with [land-cover = "mainstreamer-crop"]
    set certification-rent (available_patches_M * (((yield-company * price-premium + M-reputation-weight - land-costs-company * maintenance-premium - transportation-cost) / 0.05) - certification-cost-company))
  ]

  ask patches with [land-cover = "laggard-crop"] [
    let available_patches_L count patches in-radius 3.8 with [land-cover = "laggard-crop"]
    set certification-rent (available_patches_L * (((yield-company * price-premium + L-reputation-weight - land-costs-company * maintenance-premium - transportation-cost) / 0.05) - certification-cost-company))
  ]


  ask patches with [land-cover = "smallholder-crop"] [
    set certification-rent-smallholder (((yield-smallholder * price-premium - land-costs-smallholder * maintenance-premium - transportation-cost) / 0.05) - certification-cost-smallholder)
  ]
end

to update-intensification-rent
  ask patches with [land-cover = "pioneer-crop" or land-cover = "mainstreamer-crop" or land-cover = "laggard-crop"] [
    let available_patches count patches in-radius 3.8 with [land-cover = "mainstreamer-crop" or land-cover = "pioneer-crop" or land-cover = "laggard-crop"]
    set intensification-rent (available_patches * (((yield-company * yield-premium - land-costs-company * maintenance-premium-intensification - transportation-cost) / 0.05) - intensification-investment))
  ]

  ask patches with [land-cover = "smallholder-crop"] [
   set intensification-rent-smallholder (((yield-smallholder * yield-premium - land-costs-smallholder * maintenance-premium-intensification - transportation-cost) / 0.05) - intensification-investment)
  ]
end

to update-set-aside-rent
  ask patches with [land-cover = "forest"] [
    let convertible-patches (0.6522 * (count patches in-radius 4.5 with [land-cover = "forest" or land-cover = "abandoned"]))
    let set-aside-patches ((count patches in-radius 4.5 with [land-cover = "forest" or land-cover = "abandoned"]) - convertible-patches)

    set set-aside-rent (convertible-patches * (((yield-company * price-premium + P-reputation-weight - land-costs-company * (maintenance-premium + set-aside-premium) - transportation-cost) / 0.05) - certification-cost-company - conversion-costs-company))
    ]
end

to monitor-landscape-homogeneity
 set current-landscape-homogeneity count patches with [(land-cover = "forest" or land-cover = "river" or land-cover = "river-buffer") and (any? neighbors4 with [land-cover = "forest" or land-cover = "river" or land-cover = "river-buffer"])]
end

to reforest
  ask patches with [abandonment-timer > 0] [
    set abandonment-timer abandonment-timer - 1
  ]
  ask patches with [abandonment-timer = 0] [
    set land-cover "forest"
    set owner "reforested"
    set pcolor 55
    set abandonment-timer -10
  ]
end

to update-aichi-trajectory_update-PA-appropriateness

  ;; Updating Aichi-trajectory (i.e., determining whether the government is on track to meet the conservation [Aichi] goal set out in the GUI)
  let current-PA count patches with [protection-status = "PA" or protection-status = "set-aside" or protection-status = "buffer" or protection-status = "riparian"]
  ;; PRE 18-AUG-21: let absolute-conservation-goal (count patches with [pcolor != 0] * conservation-goal / 100) ;; changed because as is here, the absolute-conservation-goal gets updated each tick with the current number of non-black patches, but the absolute conservation goal should be based on the entire landscape as is in the inital state (think 17% of terrestrial area to be protected according to Aichi)
  let absolute-conservation-goal (14958 * conservation-goal / 100)
  let aichi-trajectory ((ticks - 80) * (absolute-conservation-goal / 80))    ;; Here, the "-80" is used because we're running the simulation from point zero, but would only want the Conservation Goals to be tested after 80 ticks, hence the -80.
  ifelse ticks > 80 [                                                        ;; similarly here, conservation goals are only tested for after 80 ticks; both this ifelse statement and the '-80' from above will be deleted when I run scenarios
    if current-PA > aichi-trajectory [set aichi-on-track? "yes"]
    if current-PA < aichi-trajectory [set aichi-on-track? "no"]
  ]
    [set aichi-on-track? "yes"]


  ;; Updating PA-appropriateness value (used to determine where to establish a protected area at the lowest opportunity cost and conflict)
  ask patches with [pxcor > -60 and pxcor < 60 and
                    pycor > -60 and pycor < 60 and (land-cover = "forest" or land-cover = "fallow" or land-cover = "smallholder-crop" or land-cover = "pioneer-crop" or land-cover = "mainstreamer-crop" or land-cover = "laggard-crop" or land-cover = "smallholder-forest")] [
    set PA-appropriateness ((count patches in-radius 11.5 with [land-cover = "forest" and (protection-status = "none" or protection-status = "riparian")]) * (transportation-cost / 2))
  ]
end
